#/obj/handlers/autodoc/autodoc_file.c
public_functions ([])
protected_functions ([])
inherits ([])
main_docs (["main":({"The include file to go with the expression handler.  You may need to usethe define EXPRESSION_NO_CLASSES to stop clashes occuring from includeingthis file into something which inherits the basic expressions file.",}),"started":({"Mon May  8 17:01:14 PDT 2000",}),"author":({"Pinkfish",}),"see":({"/std/basic/expresssions.c",}),])
define_docs (["EXPRESSION_TYPE_ARRAY_NULL":(["main":({"A null array.  This is typeless, sort of. ",}),]),"EXPRESSION_TYPE_MONEY":(["main":({"A money type. ",}),]),"EXPRESSION_TYPE_ERROR":(["main":({"The error type. ",}),]),"EXPRESSION_TYPE_ARRAY_OFFSET":(["main":({"This is the amount added to a type to get the array equivilant of it. ",}),]),"EXPRESSION_TYPE_ARRAY":(["main":({"An opaque array type, cannot get at the internal bits. ",}),]),"EXPRESSION_TYPE_VARIABLE":(["main":({"A variable type. ",}),]),"EXPRESSION_TYPE_SPECIAL":(["main":({"A special type, this is type (and above this) that should be used bythe inheriables if they wish to define special types of controls.",}),]),"EXPRESSION_TYPE_MAPPING":(["main":({"A mapping type. ",}),]),"EXPRESSION_TYPE_BOOLEAN":(["main":({"A boolean type. ",}),]),"EXPRESSION_TYPE_INTEGER":(["main":({"An integer type. ",}),]),"EXPRESSION_TYPE_FUNCTION_VARIABLE":(["main":({"A function arguement type. ",}),]),"EXPRESSION_TYPE_FLOAT":(["main":({"A float type. ",}),]),"EXPRESSION_TYPE_FUNCTION":(["main":({"A functionm type. ",}),]),"EXPRESSION_TYPE_OBJECT":(["main":({"An object type. ",}),]),"EXPRESSION_TYPE_OPERATOR":(["main":({"An operator type. ",}),]),"EXPRESSION_TYPE_STRING":(["main":({"A string type. ",}),]),"EXPRESSION_TYPE_USER_FUNCTION":(["main":({"A user defined function. ",}),]),])
includes ([])
class_docs (["parse_node":({0,({({"type",({"int",}),}),({"value",({"mixed",}),}),({"tree",({"mixed","*",}),}),}),(["element":({"type the type of the data","value the value of the data","tree if we need to make a tree for short circuit evaluation",}),"main":({"The class used to hold information about both expression nodes andevaluated data.  The type is one of the types above and the value isdependant on the type.",}),]),}),])
file_name "/include/expressions.h"
last_changed 1522061544
