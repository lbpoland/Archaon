#/obj/handlers/autodoc/autodoc_file.c
public_functions (["query_homepage":({({"string",}),({}),(["main":({"This method queries the current homepage for the player.",}),"see":({"set_homepage()",}),"return":({"their homepage url",}),]),}),"set_real_name":({({"void",}),({({"string",}),"str",}),(["main":({"This will set the real name of the player.",}),"param":({"str the new real name of the player",}),"see":({"query_name()",}),]),}),"set_where":({({"void",}),({({"string",}),"str",}),(["main":({"This method sets the currnet location of the player.",}),"param":({"str the new location",}),"see":({"query_location()",}),]),}),"query_desc":({({"string",}),({}),(["main":({"This method returns the current description of the player.",}),"see":({"set_desc()",}),"return":({"the current description",}),]),}),"query_birthday":({({"string",}),({}),(["main":({"This method returns the players birthday.  The birthday will beof the form \"4th of july\".",}),"see":({"set_birthday()","query_is_birthday_today()",}),"return":({"the current birthday",}),]),}),"query_real_name":({({"string",}),({}),(["main":({"This will return the real name of the player.",}),"see":({"set_real_name()",}),"return":({"the real name of the player",}),]),}),"query_where":({({"string",}),({}),(["main":({"This methoid returns the location of the player.  The locationis the location in their funger infor, so like \"Perth, oz, whatever\".",}),"see":({"set_where()",}),"return":({"their currently set location",}),]),}),"set_email":({({"nomask","void",}),({({"string",}),"str",}),(["main":({"This method sets the current email address of the player.",}),"param":({"str the new email address",}),"see":({"query_email()",}),]),}),"set_homepage":({({"nomask","void",}),({({"string",}),"str",}),(["main":({"This method sets the players homepage.",}),"param":({"their homepage url",}),"see":({"query_homepage()",}),]),}),"query_email":({({"string",}),({}),(["main":({"This method returns the current email address of the player.",}),"see":({"set_email()",}),"return":({"the current email address",}),]),}),"set_birthday":({({"void",}),({({"string",}),"i",}),(["main":({"This method sets the players current birthday.  The birthdayneeds to be of the form:  \"4th of July\".",}),"see":({"query_birthday()","query_is_birthday_today()",}),"param":({"i the new birthday to set",}),]),}),"set_desc":({({"void",}),({({"string",}),"str",}),(["main":({"This method sets the description of the player.  Thedescription is the little bit of text seen in the long.",}),"see":({"query_desc()",}),"param":({"str the new description of the player",}),]),}),"set_zone_desc":({({"void",}),({({"string",}),"zone",({"string",}),"desc",}),(["main":({"This method sets the description for the specific area of the body.",}),"param":({"zone the zone to set the description for","desc the description for that zone",}),]),}),"query_rhosts":({({"string","*",}),({}),(["main":({"Find out which IP addresses this user wants to be able to login from.",}),]),}),"query_main_zone_desc":({({"string",}),({({"object","*",}),"wearing",}),(["main":({"This method returns the main zone description to use in thelong of the player.",}),"return":({"the main zone description",}),]),}),"set_rhosts":({({"void",}),({({"string","*",}),"ips",}),([]),}),"query_is_birthday_today":({({"int",}),({}),(["main":({"This method checks to see if it is currently the players birthday.",}),"see":({"set_birthday()","query_birthday()",}),"return":({"1 if it is their birthday, 0 if not",}),]),}),"query_zone_desc":({({"string",}),({({"string",}),"zone",}),(["main":({"This method returns the zone description for the specified zone.",}),"param":({"zone the zone to get the description for",}),"return":({"the zone description",}),]),}),"finger_set":({({"int",}),({}),(["main":({"This method returns whether the player has set their finger info.",}),"return":({"1 if they have their finger information set, 0 if not",}),]),}),"set_password":({({"void",}),({({"string",}),"pass",}),(["main":({"This method changes the password of the player.  It can onlybe called by the login object at startup.",}),"param":({"pass the new password",}),]),}),"query_zone_desc_names":({({"string","*",}),({}),(["main":({"This method returns all the zones there are currently descriptions for.",}),"return":({"the zones there are descriptions for",}),]),}),"finger_commands":({({"void",}),({}),(["main":({"The commands related to the fingering of a player.Just the change password command at the moment.",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This file contains all of the information related to a player,their password, real name, birthday, location etc.",}),"author":({"Pinkfish",}),])
define_docs ([])
includes (["/include/player.h":1522061544,"/include/mail.h":1522061544,"/include/clothing.h":1522061544,"/include/playtesters.h":1522061544,])
class_docs ([])
file_name "/global/finger.c"
last_changed 1522061544
