#/obj/handlers/autodoc/autodoc_file.c
public_functions (["set_slope":({({"void",}),({({"int",}),"angle",({"string",}),"loc",({"string",}),"dest",}),(["main":({"Set the gradient of this location.",}),"param":({"angle the angle (in degrees).","loc a short description of the area to show to players.","dest the fall destination.",}),]),}),"query_fall_damage":({({"mixed",}),({({"string",}),"type",}),(["main":({"Find out the damage for falling from this location.",}),"see":({"set_fall_damage",}),"param":({"type The type ( weak, slope, step, jump, or all )",}),"return":({"An int, or an integer array of the damage(s)",}),]),}),"set_jump_tm_messages":({({"void",}),({({"string","*",}),"messages",}),(["main":({"Set the messages for when a player gets a TM by jumping. These messageswill be selected at random, and then coloured appropriately.",}),"see":({"set_jump",}),"param":({"messages the array of messages from which to choose.",}),]),}),"test_remove":({({"int",}),({({"object",}),"ob",({"int",}),"flag",({"mixed",}),"dest",}),([]),}),"set_jump_failure_messages":({({"void",}),({({"string",}),"player",({"string",}),"from",({"string",}),"to",}),(["main":({"Set the messages for when a player falls off by failing to jump acrossa gap.",}),"see":({"set_jump",}),"param":({"player the message shown to the player.","from the message shown in the room the player is leaving.","to the message shown in the room the player is entering.",}),]),}),"set_weak_roof":({({"void",}),({({"int",}),"maxweight",({"string",}),"dest",}),(["main":({"Set the maximum weight this location can support.",}),"param":({"maxweight the maximum weight capacity of the roof.","dest the room you go to if the roof collapses.",}),]),}),"set_corpse_slope_messages":({({"void",}),({({"string",}),"from",({"string",}),"to",}),(["main":({"Set the messages for when a corpse slides off a sloping roof.",}),"see":({"set_slope",}),"param":({"from the message shown in the room the corpse is leaving.","to the message shown in the room the corpse is entering.",}),]),}),"set_item_slope_messages":({({"void",}),({({"string",}),"from",({"string",}),"to",}),(["main":({"Set the messages for when a non-corpse item slides off a sloping roof.",}),"see":({"set_slope",}),"param":({"from the message shown in the room the object is leaving.","to the message shown in the room the object is entering.",}),]),}),"set_weak_messages":({({"void",}),({({"string",}),"player",({"string",}),"from",({"string",}),"to",({"string",}),"warn",}),(["main":({"Set the messages for when a player falls through a weak roof.",}),"see":({"set_weak_roof",}),"param":({"player the message shown to the player.","from the message shown in the room the player is leaving.","to the message shown in the room the player is entering.","warn the message shown to the room just before the roof collapses.",}),]),}),"set_jump":({({"int",}),({({"mixed",}),"dir",({"string",}),"dest",({"string",}),"fall_dest",({"int",}),"distance",}),(["main":({"Setup a jumping exit. The player will be able to \"jump <dir>\" and a skilltest will be performed and they'll succeed or fail.Streets in AM are usually 5-20 wide.if you want to do something other than the standard fall function,you'll need to mask do_fall() in the child room.",}),"param":({"dir direction names","dest the destination","fall_dest the destination if they fall","distance the distance of the jump",}),"example":({"set_jump( ({ \"north\", \"n\" }), RUN + \"run12\", FILIGREE + \"filigree10\", 6 );",}),"return":({"-1 if any of the keys in dir already exists, 0 if dir ismalformed (string and string * are the only acceptable types), or1 on success.",}),]),}),"set_step_messages":({({"void",}),({({"string",}),"player",({"string",}),"from",({"string",}),"to",}),(["main":({"Set the messages for when a player falls off by moving in the wrongdirection.",}),"see":({"set_jump",}),"param":({"player the message shown to the player.","from the message shown in the room the player is leaving.","to the message shown in the room the player is entering.",}),]),}),"set_slope_messages":({({"void",}),({({"string",}),"player",({"string",}),"from",({"string",}),"to",}),(["main":({"Set the messages for when a player slips off a sloping roof.",}),"see":({"set_slope",}),"param":({"player the message shown to the player.","from the message shown in the room the player is leaving.","to the message shown in the room the player is entering.",}),]),}),"set_fall_damage":({({"void",}),({({"string",}),"type",({"int",}),"damage",}),(["main":({"Set the amount of damage the player will take if they fall off thisroof.  This amount is somewhat randomised.",}),"see":({"set_slope, set_jump, set_weak_roof",}),"param":({"type The type of fall (weak, slope, step or jump; all to set all damages the same)","damage The amount of damage.",}),]),}),"set_jump_success_messages":({({"void",}),({({"string",}),"player",({"string",}),"from",({"string",}),"to",}),(["main":({"Set the messages for when a player successfully jumps a gap.",}),"see":({"set_jump",}),"param":({"player the message shown to the player.","from the message shown in the room the player is leaving.","to the message shown in the room the player is entering.",}),]),}),"set_ghost_fall_messages":({({"void",}),({({"string",}),"player",({"string",}),"from",({"string",}),"to",}),(["main":({"Set the messages for when a ghost falls off a roof.",}),"see":({"set_slope",}),"param":({"player the message shown to the player.","from the message shown in the room the player is leaving.","to the message shown in the room the player is entering.",}),]),}),])
protected_functions ([])
inherits (["/std/room/outside":({}),])
main_docs (["main":({"This is a standard rooftop inheritable. It allows you to setup a rooftoplocation including such things as slope, strength, jumping locations etc.",}),"author":({"shrike",}),"see":({"set_wall",}),"example":({"inherit \"/std/rooftop\"void setup() {   set_fall_damage( \"all\", 500 );   set_slope( 60, \"ledge\", PATH + \"womble01\" );   set_weak_messages(     \"The ledge crumbles under your weight.\",     \"$short$ falls from the crumbling ledge.\",     \"$short$ comes crashing to the ground.\",     \"The paving stones shift beneath your feet.\",   );   set_weak_roof( 2000, PATH + \"womble01\" );   set_jump( ({ \"north\", \"n\" }), PATH + \"ledge01\", PATH + \"womble01\", 6 );}",}),])
define_docs (["ROPE":([]),"TOO_SOON":([]),"ROCK":([]),])
includes (["/include/tasks.h":1522061544,])
class_docs ([])
file_name "/std/room/rooftop.c"
last_changed 1522061544
