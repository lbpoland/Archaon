#/obj/handlers/autodoc/autodoc_file.c
public_functions (["query_pt_log_file":({({"string",}),({}),(["main":({"This method returns the log file for logging of PT fake deaths and damage.The default is /d/playtesters/log/pain.",}),"return":({"The filename of the log file.",}),]),}),"pt_query_hp":({({"int",}),({}),(["main":({"This method returns the number of fake hitpoints.",}),"return":({"The number of fake hitpoints",}),]),}),"query_pt_protection":({({"int",}),({}),(["main":({"This method returns the status of the protect flag.  2 means that they have their room protection enabled, 1 means that they have their personal protectionenabled, 0 means that they are not.",}),"return":({"The value of the protect flag",}),]),}),"disable_damage_log":({({"void",}),({}),(["main":({"This method disables logging of PT fake damage.",}),]),}),"query_playtester":({({"int",}),({}),(["main":({"This method tells us if the object is a playtester or not.",}),"return":({"1 if the object is a creator, 0 if not.",}),]),}),"enable_pt_protection":({({"int",}),({}),(["main":({"This method sets the PT as being under room protection.  Room protection does not expire and lasts until it is switched off.  It also over-rides personal protection.  ",}),"return":({"1 on success, 0 on failure.",}),]),}),"advancement_restriction":({({"int",}),({}),([]),}),"pt_do_death":({({"object",}),({}),(["main":({"This method replaces the normal do_death() when testing.  It givesplayers a message about how it would have hurt if it had been for real.",}),"param":({"thing The object that killed us.",}),"return":({"A corpse",}),]),}),"set_pt_log_file":({({"void",}),({({"string",}),"str",}),(["main":({"This method sets the log file for logging of PT fake deaths and damage.The default is /d/playtesters/log/pain.",}),"param":({"str The filename of the log file.",}),]),}),"pt_set_hp":({({"void",}),({({"int",}),"hp",}),(["main":({"This method sets the fake hitpoints.",}),"param":({"hp The new value of fake hitpoints",}),]),}),"disable_personal_pt_protection":({({"int",}),({}),(["main":({"This method resets the protect flag so that adjust_hp anddo_death are not masked, i.e. the player can be hurt in thenormal(*) way.(*) Having \"normal\" ways to hurt people is quite sick...  But it's fnu!",}),]),}),"query_log_death":({({"int",}),({}),(["main":({"This method returns the status of the LOG_DEATH flag, i.e. whetherPT fake deaths are logged or not.",}),"return":({"Status of LOG_DEATH flag",}),]),}),"query_log_damage":({({"int",}),({}),(["main":({"This method returns the status of the LOG_DAMAGE flag, i.e. whetherPT fake damage is logged or not.",}),"return":({"Status of LOG_DAMAGE flag",}),]),}),"pt_adjust_hp":({({"varargs","int",}),({({"int",}),"hp",({"object",}),"attacker",}),(["main":({"This method adjusts the fake hitpoints.",}),"param":({"hp The value to add to fake hitpoints",}),"return":({"hp after adjustment",}),]),}),"disable_pt_protection":({({"int",}),({}),(["main":({"This method sets the PT as no longer being under room protection.  Room protection does not expire and lasts until it is switched off.  It also over-rides personal protection.  ",}),"return":({"1 on success, 0 on failure.",}),]),}),"disable_death_log":({({"void",}),({}),(["main":({"This method disables logging of PT fake deaths.",}),]),}),"query_in_pt_arena":({({"int",}),({}),([]),}),"query_contractable":({({"int",}),({}),([]),}),"enable_personal_pt_protection":({({"int",}),({}),(["main":({"This method sets the protect flag so that adjust_hp anddo_death are masked.",}),]),}),"enable_death_log":({({"void",}),({}),(["main":({"This method enables logging of PT fake deaths.",}),]),}),"enable_damage_log":({({"void",}),({}),(["main":({"This method enables logging of PT fake damage.",}),]),}),"query_pt_area":({({"int",}),({({"object",}),"ob",}),([]),}),])
protected_functions ([])
inherits (["/global/player":({}),])
main_docs (["main":({"This is the playtester player object.  It gives the playtesters thebonus extra commands needed by happy playtesters.",}),"started":({"Tue Jun 25 11:27:05 PDT 2002",}),"author":({"Pinkfish",}),"see":({"/global/player.c",}),])
define_docs (["MAX_COUNTER":([]),"PROTECTION_LOG":([]),])
includes (["/include/command.h":1522061544,"/include/player_handler.h":1522061544,"/include/player.h":1522061544,"/include/login_handler.h":1522061544,"/include/playtesters.h":1522061544,])
class_docs (["playtester_data":({0,({({"protect",({"int",}),}),({"hp",({"int",}),}),({"log_file",({"string",}),}),({"log_death",({"int",}),}),({"log_damage",({"int",}),}),({"turn_off",({"int",}),}),({"protection_counter",({"int",}),}),({"room_protection",({"int",}),}),}),([]),}),])
file_name "/global/playtester.c"
last_changed 1522061544
