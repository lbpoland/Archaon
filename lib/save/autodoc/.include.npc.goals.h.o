#/obj/handlers/autodoc/autodoc_file.c
public_functions ([])
protected_functions ([])
inherits ([])
main_docs (["main":({"The helper include file for the goals system.",}),"started":({"Thu Jul 30 18:08:47 PDT 1998",}),"author":({"Pinkfish",}),"see":({"/std/living/goals.c","/std/npc/goals/base.c",}),])
define_docs (["GOAL_HIGH_PRIORITY":(["main":({"A high priority goal.",}),]),"GOAL_EVENT_HANDLED":(["main":({"This is the return value from the event handling system if the eventwas handled.",}),]),"GOAL_EVENT_NOT_HANDLED":(["main":({"This is the return value from the event handling routine if the eventwas not handled.",}),]),"GOAL_BASE_INHERIT":(["main":({"The basic inherit for all npc goals.",}),]),"GOAL_LOWEST_PRIORITY":(["main":({"The lowest priority goal.",}),]),"GOAL_LOW_PRIORITY":(["main":({"A low priority goal.",}),]),"GOALS_DIR":(["main":({"The directory all the standard goals will go in.",}),]),"GOAL_INVALID_PRIORITY":(["main":({"The invalid priority for a goal.",}),]),"GOAL_DEFAULT_PRIORITY":(["main":({"The default priority for a goal that does not have a priority set.",}),]),"GOAL_CONTINUE_PROCESSING":(["main":({"This is the return value for the goal which tells it to skipthis goal and continue onto the next.",}),]),"GOAL_VERY_HIGH_PRIORITY":(["main":({"A very high priority goal.",}),]),"GOAL_MEDIUM_PRIORITY":(["main":({"A medium priority goal.",}),]),])
includes ([])
class_docs (["goal_control":({0,({({"extra_plans",({"mapping",}),}),({"current_plan",({"string",}),}),({"priority",({"int",}),}),({"data",({"mixed",}),}),({"plan_info",({"mapping",}),}),}),(["main":({"The class used to keep track of the data passed into a goal.",}),]),}),])
file_name "/include/npc/goals.h"
last_changed 1522061544
