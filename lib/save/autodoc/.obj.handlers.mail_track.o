#/obj/handlers/autodoc/autodoc_file.c
public_functions (["remove_member":({({"int",}),({({"string",}),"list_name",({"string",}),"mem",}),(["main":({"This method removes a member from the specified mailing list.",}),"see":({"add_member()","query_member()","delete_member()",}),"param":({"list_name the mailing list to remove the member from","mem the members name to remove",}),"return":({"1 on success, 0 on failure",}),]),}),"query_creator":({({"string",}),({({"string",}),"list_name",}),(["main":({"This method determines the creator of the list.",}),"see":({"create_list()",}),"param":({"list_name the list to get the creator of",}),"return":({"the creator of the list",}),]),}),"query_member":({({"int",}),({({"string",}),"list_name",({"string",}),"name",}),(["main":({"This method checks to see if the given player is in the selectedmailing list.",}),"see":({"query_mailing_lists()","query_list()","query_members()",}),"param":({"list_name the mailing list name","name the name of the player in the list",}),"return":({"1 if the player is a member, 0 if not",}),]),}),"query_controllers":({({"string","*",}),({({"string",}),"list",}),(["main":({"This method returns all the current controllers of the mailing list.Controllers can add and remove members from a list.",}),"param":({"list the mailing list to query the controllers for",}),"return":({"the array of controllers",}),]),}),"mail":({({"int",}),({({"string",}),"str",({"string",}),"sub",}),(["main":({"This is the main mail function.  It tries to start up a mailer withthe default address and subject.  If their is no default address thenthe mailer uses it's menu mode, otherwise it sends one mail and thenleaves.",}),"param":({"str 0 or \"\" for no default address","sub the default subject",}),]),}),"find_mailer":({({"object",}),({({"string",}),"str",}),(["main":({"This method finds the mailer associated with a particular player.",}),"see":({"add_mailer()","delete_mailer()",}),"param":({"str the player whose mailer to find.",}),"return":({"the mailer object associated with the player",}),]),}),"query_list":({({"int",}),({({"string",}),"list",}),(["main":({"This method checks to see if the specified list exists or not.",}),"see":({"query_mailing_lists()","query_members()","query_member()",}),"param":({"list the list name to check",}),"return":({"1 if the list exists, 0 if not",}),]),}),"add_controller":({({"int",}),({({"string",}),"list_name",({"string",}),"mem",}),(["main":({"This method adds a controller to the specified mailing list.",}),"see":({"query_controllers()",}),"param":({"list_name the controller to add","mem the controller to add",}),]),}),"remove_controller":({({"int",}),({({"string",}),"list_name",({"string",}),"name",}),(["main":({"This method removes a controller from the specified mailing list.",}),"see":({"add_controller()","query_controller()",}),"param":({"list_name the mailing list to remove the member from","name the member to remove",}),]),}),"query_controller":({({"int",}),({({"string",}),"list_name",({"string",}),"name",}),(["main":({"This method checks to see if the given player is a controller.",}),"see":({"query_controllers()","query_member()",}),"param":({"list_name the name of the list","name the name to check to see if they are a controller",}),]),}),"query_members":({({"string","*",}),({({"string",}),"list",}),(["main":({"This returns the current members of the specified mailing list.",}),"see":({"query_mailing_lists()","query_list()","query_member()",}),"param":({"list the mailing list to get the memebrs of",}),"return":({"the members of the mailing list",}),]),}),"delete_mailer":({({"int",}),({({"object",}),"ob",}),(["main":({"This method removes a mailer from the current list of mailers.It removes the mailer based on the object itself",}),"see":({"add_mailer()","find_mailer()",}),"param":({"ob the mailer object to remove",}),"return":({"0 if unable to remove",}),]),}),"create_list":({({"int",}),({({"string",}),"list",({"string",}),"creator",}),(["main":({"This method attempts to create a mailing list.",}),"see":({"query_creator()","query_members()","query_controllers()",}),"param":({"list the name of the list to create","creator the creator of the list",}),"return":({"1 if successful, 0 if not",}),]),}),"delete_member":({({"int",}),({({"string",}),"list_name",({"string",}),"mem",}),(["main":({"This method removes a member from the list if they are either acontroller or a member.",}),"see":({"remove_member() ","remove_controller()",}),"param":({"list_name the list to remove the member from","mem the member to remove from the list",}),"return":({"1 on succes, 0 on failure",}),]),}),"add_mailer":({({"int",}),({({"object",}),"ob",({"string",}),"str",}),(["main":({"This method adds in a mailer for a specific player into the currentlist of mailers.",}),"param":({"ob the mailer for the player","str the player the mailer is for",}),"return":({"return 1 if successful",}),]),}),"add_member":({({"int",}),({({"string",}),"list_name",({"string",}),"mem",}),(["main":({"This method adds a member to the specified mailing list.",}),"see":({"remove_member()","add_member()",}),"param":({"list_name the mailing list to add a member too","mem the member to add",}),"return":({"1 if successful, 0 if not",}),]),}),"query_mailing_lists":({({"string","*",}),({}),(["main":({"This method returns the current mailing lists available on thehandler.",}),"return":({"the array of available mailing lists",}),]),}),])
protected_functions (["delete_list":({({"int",}),({({"string",}),"list",}),(["main":({"This method will delete a mailing list.",}),"see":({"create_list()",}),"param":({"list the mailing list to delete",}),"return":({"0 if failed and 1 on success",}),]),}),])
inherits (["std/object":({}),])
main_docs (["main":({"This handler keeps track of who has a mailer at the moment and sends themail to there instead.  This also keeps track of the current mailinglists in the system.",}),"index":({"mailing_list",}),"started":({"1991 sometime",}),"author":({"Pinkfish",}),])
define_docs (["SECURITY":([]),])
includes (["/include/mail_track.h":1522061544,"/include/player_handler.h":1522061544,"/include/mail.h":1522061544,])
class_docs ([])
file_name "/obj/handlers/mail_track.c"
last_changed 1522061544
