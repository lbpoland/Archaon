#/obj/handlers/autodoc/autodoc_file.c
public_functions (["ProfaneTest":({({"int",}),({({"string",}),"strin",}),(["main":({"ProfaneTest is a routine that evaluates how likely the text is tobe profane/swearing/obscenity and so on.  These are the sorts ofthings that would never be allowed as a player name.  Spaces, nonletters and repeating letters are worked around by this test.",}),"param":({"line line of text to evaluate",}),"return":({"percentage chance of being offensive: chances over 100% can be returned        indicating greater likelihood of offense and/or more than one suspect word.        If you want it as lily white as possible you should insist on 0.",}),]),}),"FreqTest":({({"int",}),({({"string",}),"line",}),(["main":({"FreqTest is a routine that evaluates how like english a line of text is.  Itcompares the frequency of the letters, spaces and non-letters to the typicalnumber in English (taken from the am board archive).  A typical sentenceshould give a percentage change of being english in the range 50-100.Short or unusual sentences can get borderline evaluations (<60) even if theyare english.",}),"param":({"line line of text to evaluate",}),"example":({"\"/obj/handlers/english_handler\"->FreqTest(\"Short english sentence\")Returns: 75","\"/obj/handlers/english_handler\"->FreqTest(\"Sqeal spezzial sentenz\")Returns: 1","\"/obj/handlers/english_handler\"->FreqTest(\"eeeeeeee dfs fsfdsfddf\")Returns: 37","\"/obj/handlers/english_handler\"->FreqTest(\"too short\");  Returns: 59","\"/obj/handlers/english_handler\"->FreqTest(\"Don't like l33t sp33k neither\");  Returns: 36","\"/obj/handlers/english_handler\"->FreqTest(\"a small excursion to the                                                    zoo should be permissible\");Returns: 83 ",}),"return":({"percentage chance of being english 50-100 ok < 50 might be gibberish ",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"English Handler",}),"author":({"ShaggyThis handler is a collection of methods that attempt to evaluate how muchlike english a line of text is.  Some tests might be more expensive thanothers but the general idea is to be much cheaper than a dictionary lookup.The general principle it to return a value that is closer to 100 the betterthe english with 50 being borderline (ie. likely to be gibberish).The returned value is thus a bit like a percentage chance that it isenglish.",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/obj/handlers/english_handler.c"
last_changed 1522061544
