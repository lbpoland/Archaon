#/obj/handlers/autodoc/autodoc_file.c
public_functions ([])
protected_functions ([])
inherits ([])
main_docs (["main":({"The main include file for clubs.  This contains all the defines and thingsneeded to interface to the club handler.",}),"started":({"Sat Oct  3 22:30:30 EDT 1998",}),"author":({"Pinkfish",}),])
define_docs (["CLUB_COST_INSIGNIA":(["main":({"This is the cost of the inisgnia.",}),]),"CLUB_UNKNOWN_MEMBER":(["main":({"The name given to members that have been remove from positions.",}),]),"CLUB_COST_PER_YEAR":(["main":({"This amount of money a club will cost to run each dw year.",}),]),"CLUB_DISCUSS_TYPE_MASK":(["main":({"Mask to only get the real type of the discussion item.",}),]),"CLUB_DISCUSS_NO_QUORUM":(["main":({"Special flag for the type giving the quorum, or no quorum requiredstatus of the discussion idea.",}),]),"CLUB_DISCUSS_NOMINATION":(["main":({"This type of item will allow someone to be nominated for a position.The choices element will be used to keep track of who has nominatedwho for what.",}),]),"CLUB_MESSAGE_EMOTE_INDEX":(["main":({"This defines the index of the emote flag in the message array.",}),]),"CLUB_MAX_NAME_LEN":(["main":({"This is the maximum length of a club name.",}),]),"CLUB_DISCUSS_MESSAGE_CHANGE_POSITION":(["main":({"This message is sent when a position in the club is changed name.The first arguement is the position being changed and thesecond arguement is the position it is changed to.",}),]),"FAMILY_STARTUP_COST":(["main":({"The amount it costs to startup a family.",}),]),"CLUB_SECRET_FLAG":(["main":({"This is the flag to determine if the club is secret or not.",}),]),"CLUB_ELECTION_TIME":(["main":({"This defines the amount of time for the actuall election.",}),]),"CLUB_DISCUSS_NO_CONFIDENCE":(["main":({"This type is a no-confidence vote in the current committee, or in aspecific comittee member.  The name field contains the position theno-confidence vote is in.",}),]),"CLUB_ROOM_CLUB_ONLY":(["main":({"This makes the club control room a club only room, only club manipulations canbe done.",}),"see":({"/std/room/club_control.c",}),]),"CLUB_ROOM_CLUB_OR_FAMILY":(["main":({"This makes the club control room a club or family room.",}),"see":({"/std/room/club_control.c",}),]),"CLUB_TIMEOUT":(["main":({"This defines the club timeout for the clubs.  8 weeks.",}),]),"CLUB_BADGE":(["main":({"The location of the club badge.",}),]),"CLUB_TRANSACTION_INSIGNIA":(["main":({"Transaction type when someone requests some insignias.",}),]),"CLUB_DISCUSS_MEMBER_REMOVE":(["main":({"This type of item will be for discussing removing a member from theclub.  The name field contains the person being removed.",}),]),"CLUB_TRANSACTION_TRANSFER":(["main":({"Transaction type for transfering money from one account to another.",}),]),"CLUB_DISCUSS_MESSAGE_SHORT_DESCRIPTION":(["main":({"The message sent to the discussion item functions when a shortdescription is requested.  This should not have any new lines init and should be very short summary.",}),]),"CLUB_CONTROLLER_MEMBER":(["main":({"The name of the club controller, when used as a member.",}),]),"CLUB_DISCUSS_OPEN":(["main":({"Special flag for the type giving the open or closed status of thediscussion idea.",}),]),"CLUB_NOMINATION_TIME":(["main":({"This defines the amount of time to call for nominations.",}),]),"CLUB_FAMILY":(["main":({"The type to use to create a family.  A family is a special type of aclub.",}),"see":({"/obj/handlers/club_handler->create_club()",}),]),"CLUB_DISCUSS_MESSAGE_TYPE_NOMINATE":(["main":({"This is the return type to use to specify that the discussion itemis a nomination type.",}),]),"CLUB_DISCUSS_FUNCTION_FUNCTION":(["main":({"This is the index of the function in the name field when doing afunction discussion type.",}),]),"CLUB_PAY_PERIOD":(["main":({"This defines the amount of time for each pay period.",}),]),"CLUB_DISCUSS_FUNCTION":(["main":({"This type of item will do calls onto a specified object to handleall of the data and stuff.  The way this works is that theentire discussion item will be passed onto the function, the functionis specified as a two element array in the name field of the discussionitem.",}),]),"CLUB_STARTUP_COST":(["main":({"The amount it costs to startup a club.",}),]),"CLUB_DISCUSS_MESSAGE_VERIFY":(["main":({"The message sent to the discussion item functions when the itemis initialy added.  If this returns a non-zero value then it isproperly verified and the item will be added.",}),]),"CLUB_TRANSACTION_DEPOSIT":(["main":({"Transaction type when someone deposits some money.",}),]),"CLUB_MINIMUM_ELECTION_PERIOD":(["main":({"This defines the minimum amount of time for an election.",}),]),"CLUB_PERSONAL":(["main":({"The type to use to create a personal club type.  In a personal club itis run by one specific person, if that person leaves the mud for toolong or the dues are not paid then the club will cease to exist.",}),"see":({"/obj/handlers/club_handler->create_club()",}),]),"CLUB_DISCUSS_MESSAGE_REMOVE_POSITION":(["main":({"This message is sent when the position is removed from the club.The first arguement contains the position being removed.",}),]),"CLUB_TRANSACTION_UPKEEP":(["main":({"Transaction type for when the club has its yearly charges.",}),]),"CLUB_DISCUSS_FUNCTION_OBJECT":(["main":({"This is the index of the object in the name field when doing afunction discussion type.",}),]),"CLUB_DISCUSS_MESSAGE_TYPE":(["main":({"This message is sent to determine the type of the discussion item.Currently there are only two types, nomination and voting.  Thevoting type means the 'vote' command is used for the discussionitem and the 'nomination' means the nominate type is used.",}),"see":({"CLUB_DISCUSS_MESSAGE_TYPE_VOTE","CLUB_DISCUSS_MESSAGE_TYPE_NOMINATE",}),]),"CLUB_ROOM_FAMILY_ONLY":(["main":({"This makes the club control room a family only room, only family manipulations canbe done.",}),"see":({"/std/room/club_control.c",}),]),"CLUB_MAX_POSITION_NAME":(["main":({"This is the maximum size that a position name can be.",}),]),"CLUB_FAMILY_RESPOND_TYPE":(["main":({"This defines the type to use for families in the add_respond_commandsection of club handling.",}),"see":({"/std/living/respond_cmd.c",}),]),"CLUB_DISCUSS_MESSAGE_TYPE_VOTE":(["main":({"This is the return type to use to specify that the discusion itemis a voting type.",}),]),"CLUB_DISCUSS_MESSAGE_LONG_DESCRIPTION":(["main":({"The message sent to the discussion item functions when a longdescription is requested.  This should be a detailed descriptionof the item, the choices are not neeeded to be included since they'will be displayed automatically.",}),]),"CLUB_DISCUSS_SECRET_TYPE":(["main":({"This type of item will be for discussing changing the club to asecret type.",}),]),"CLUB_RESPOND_TYPE":(["main":({"This defines the type to use for clubs in the add_respond_commandsection of the club handling.",}),"see":({"/std/living/respond_cmd.c",}),]),"CLUB_TRANSACTION_WITHDRAWL":(["main":({"Transaction type for withdrawing some money from the club.",}),]),"CLUB_DISCUSS_MESSAGE_REMOVE_MEMBER":(["main":({"This message is sent when a member is removed from the club.The first argument contrains the member being removed.",}),]),"CLUB_HANDLER":(["main":({"The location of the club handler.",}),]),"CLUB_TYPE_MASK":(["main":({"This is the mask to get the type from the type attribute.",}),]),"CLUB_DISCUSS_NO_CHOICE":(["main":({"This is the choice which means no no no!",}),]),"CLUB_DISCUSS_YES_CHOICE":(["main":({"This is the choice which means do it!",}),]),"CLUB_DISCUSS_MESSAGE_NOMINATION_QUERY":(["main":({"This message is sent to return the nomination mapping.  It must bein the same format as descriped in /obj/handlers/inherit/club_discuss.c",}),"see":({"/obj/handlers/inherit/club_discuss.c",}),]),"CLUB_DISCUSS_ABSTAIN_CHOICE":(["main":({"This is the choice to abstain from the vote.",}),]),"CLUB_DISCUSS_DESCRIPTION":(["main":({"This type is a discussion item to the change the clubs description.  Theinformation field will contain the new description and the choices fieldshould only contain 'yes' and 'no'.",}),]),"CLUB_ELECTION_PERIOD":(["main":({"This defines the amount of time between each election.  About 6 realmonths and 2 am years.",}),]),"CLUB_DEFAULT_ACCOUNT_NAME":(["main":({"The default name for the default account.",}),]),"FAMILY_COST_PER_MEMBER_PER_YEAR":(["main":({"The amount of money a family costs per member per year.  10 am pence.",}),]),"CLUB_DISCUSS_REMOVE_ACCOUNT":(["main":({"This type of item will add a new account to the club.The name field will contain the name of the new account.",}),]),"CLUB_DISCUSS_POSITION_REMOVE":(["main":({"This type of item will allow a position to be removed from the club.The name field will contain the position being removed.",}),]),"CLUB_MAXIMUM_ELECTED_MEMBERS":(["main":({"This is the maximum number of members a club can have before itmust turn into an elected club.",}),]),"CLUB_DISCUSS_ELECTION":(["main":({"This type of discussion item is used when a position become vacantbefore an full election is due.  It is a by-election.  Thename field contains the position being elected and the choices containsthe list of people to choose the election from.",}),]),"CLUB_TRANSACTION_START_BALANCE":(["main":({"Transaction type for starting balance of the club.",}),]),"CLUB_FLAGS_MASK":(["main":({"This is the mask to get the flags from the type attribute.",}),]),"CLUB_DISCUSS_MESSAGE_WITHDRAW":(["main":({"This message is sent when someone is withdrawing from a position in a nomination discussion item.",}),]),"CLUB_DISCUSS_MEMO":(["main":({"This type is a discussion item for a memo of some kind.  Means that itis about whatever the players wish it to be about and results are mailedto the people involed (or posted on their buliten board if they have one).",}),]),"CLUB_MINIMUM_ELECTED_MEMBERS":(["main":({"This is the minimum number of members a club must have before it canbecome elected.",}),]),"FAMILY_COST_PER_YEAR":(["main":({"This amount of money a family will cost to run each dw year.",}),]),"CLUB_DISCUSS_NEW_POSITION":(["main":({"This type of item will be a discussion on adding in a new positon tothe committee.  The choices in this case should only contain 'yes' and'no' and the name field will be the name of the new position.",}),]),"CLUB_ELECTED":(["main":({"The type to use to create a elected club type.  In an elected club allthe officals are elected now and then.",}),"see":({"/obj/handlers/club_handler->create_club()",}),]),"CLUB_DISCUSS_MESSAGE_NOMINATION":(["main":({"The message sent to the discussion item function when a nominationrequest is done.  The first argument will contain the persondoing the nomination and the second will contain the person beingnominated.",}),]),"MAX_FAMILY_NAME_LEN":(["main":({"The maximum length of a family name, with spaces.",}),]),"CLUB_MESSAGE_MESSAGE_INDEX":(["main":({"This defines the index of the message itself in the message array.",}),]),"CLUB_ARRAY":(["main":({"String array to give the club type name.",}),]),"CLUB_DISCUSS_MESSAGE_COMPLETE":(["main":({"The message sent to the discussion item functions when the itemis completed.  This will send the mail to committee and all thatfun stuff.  In the case a CLUB_DISCUSS_FUNCTION if this returnsa string then the club_handler will deal with mailing the resultonto the committee and posting it and archiving it.",}),]),"CLUB_DISCUSS_POSITION_NAME":(["main":({"This type of item will be for changing the name of a position inthe committee.  The choices will be yes, no, abstain.  Theoptional_data field will contain the new name and the name field will containthe old name.",}),]),"CLUB_DISCUSS_CREATE_ACCOUNT":(["main":({"This type of item will add a new account to the club.The name field will contain the name of the new account.",}),]),"CLUB_INVALID_TIME":(["main":({"This is an invalid time for the clubs election to be set to.",}),]),"CLUB_COST_PER_MEMBER_PER_YEAR":(["main":({"The amount of money a club costs per member per year.  10 am pence.",}),]),])
includes (["/include/am_time.h":1522061544,])
class_docs (["club_transaction":({0,({({"who",({"string",}),}),({"amount",({"int",}),}),({"transaction_type",({"int",}),}),({"date",({"int",}),}),({"information",({"string",}),}),}),(["main":({"This class is used to keep track of financial transactions foreach club.",}),"member":({"who who made the transaction","amount Amount of the transaction","transaction_type type of the transaction","date the date at which the transaction occured","information the information about the transaction",}),]),}),"relationship_data":({0,({({"related_to",({"string",}),}),({"relationship",({"string",}),}),}),(["main":({"This class defines the stuff which shows the relationships between thetwo people.",}),"member":({"related_to who they are related to","relationship the relationship between the two people",}),]),}),"discussion_idea":({0,({({"id",({"int",}),}),({"time_added",({"int",}),}),({"time_finish",({"int",}),}),({"discuss_type",({"int",}),}),({"added_by",({"string",}),}),({"name",({"string",}),}),({"information",({"string",}),}),({"choices",({"mapping",}),}),({"voted",({"string","*",}),}),({"optional_data",({"mixed",}),}),}),(["main":({"This class is for a discussion idea associated with a club.",}),"member":({"id the unique id of the discusion idea","time_added the time the discussion item was added","discuss_type the type of the item up for discusion","added_by the name of the member who added the item","information entered by the person when they added the discussion","name the name of the person who added the item","choices the choices and votes for the discussion","voted who has voted for the item","optional_data the extra data associated with the idea",}),]),}),"club_archive":({0,({({"archive_date",({"int",}),}),({"subject",({"string",}),}),({"matter",({"string",}),}),}),(["main":({"This class is used for the archives in elected clubs.",}),"member":({"subject the subject of the archive","matter the actual matter of the archive",}),"memver":({"archive_date the date at which the archived element was added",}),]),}),"family_response_data":({0,({({"family",({"string",}),}),({"relationship",({"string",}),}),}),(["main":({"This defines the class to use for accepting into families.",}),"member":({"family the family name","relationship the relationship type",}),]),}),])
file_name "/include/clubs.h"
last_changed 1522061544
