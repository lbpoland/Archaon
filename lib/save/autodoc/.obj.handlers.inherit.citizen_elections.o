#/obj/handlers/autodoc/autodoc_file.c
public_functions (["set_citizen_board":({({"void",}),({({"string",}),"area",({"string",}),"name",}),(["main":({"This method sets the board for the specified area.",}),"param":({"area the area to set the board for","name the name of the board",}),]),}),"is_election_phase":({({"int",}),({({"string",}),"area",}),(["main":({"This method checks to see if we are in the election phase.",}),"param":({"area the area to check",}),"return":({"1 if we are, 0 if not",}),]),}),"query_nominated_by":({({"string","*",}),({({"string",}),"area",({"string",}),"person",}),(["main":({"This method checks to see who has nominated a specified person.",}),"param":({"area the area to check","person the person to check",}),"return":({"the array of people who have nominated the person",}),]),}),"query_citizen_board":({({"string",}),({({"string",}),"area",}),(["main":({"This method returns the board for the specified area.",}),"param":({"area the area to look for the board on",}),"return":({"the board name for the area, 0 for none",}),]),}),"query_magistrate_board":({({"string",}),({({"string",}),"area",}),(["main":({"This method returns the board for the specified area.",}),"param":({"area the area to look for the board on",}),"return":({"the board name for the area, 0 for none",}),]),}),"query_people_nominated":({({"string","*",}),({({"string",}),"area",}),(["main":({"This method returns the list of people who have been nominated.",}),"param":({"area the area to get the list of people who are nominated",}),"return":({"the list of people who have been nominated",}),]),}),"disable_citizen_election":({({"int",}),({({"string",}),"area",}),(["main":({"This method sets the specifed election to \"disabled\", meaning it willsit indefinitely with no election.",}),]),}),"is_nomination_accepted":({({"int",}),({({"string",}),"area",({"string",}),"person",}),(["main":({"This method checks to see if the specifiedf person has accepted theirnomination or not.",}),"param":({"area the area to check in","person the person to check to see if they have accepted",}),"return":({"1 if they are accepted, 0 if not",}),]),}),"post_magistrate_message":({({"int",}),({({"string",}),"area",({"string",}),"subject",({"string",}),"message",}),(["main":({"This method will post a message to the magistrate board from theadministration.",}),"param":({"area the area to post the message to ","subject the subject it has","message the message to post",}),]),}),"query_can_vote_for":({({"string","*",}),({({"string",}),"area",}),(["main":({"This method retuns the list of people that can be voted for.",}),"param":({"area the area to check in",}),"return":({"the array of people that can be voted for",}),]),}),"query_end_of_phase_time":({({"int",}),({({"string",}),"area",}),(["main":({"This method returns the end of the phase time.",}),"return":({"the end of the phase time, 0 on failure",}),]),}),"is_eligible_to_vote_for":({({"int",}),({({"string",}),"area",({"string",}),"person",}),(["main":({"This method checks to see if the specified person is an eligibleperson to vote for.",}),"param":({"area the area to checlk","person the person to check",}),"return":({"1 if they are, 0 if not",}),]),}),"post_citizen_message":({({"int",}),({({"string",}),"area",({"string",}),"subject",({"string",}),"message",}),(["main":({"This method will post a message to the citizen board from theadministration.",}),"param":({"area the area to post the message to ","subject the subject it has","message the message to post",}),]),}),"nominate_magistrate":({({"int",}),({({"string",}),"area",({"string",}),"person",({"string",}),"nominator",}),(["main":({"This method nominates a person for a position.",}),"param":({"area the area to nominate in","person the being nominated","nominator the person doing the nomination",}),"return":({"1 on success, 0 on failure",}),]),}),"has_voted":({({"int",}),({({"string",}),"area",({"string",}),"person",}),(["main":({"This method checks to see if the specified person has voted.",}),"param":({"area the area to check in","person the person the check",}),"return":({"1 if they have voted, 0 if not",}),]),}),"vote_for_people":({({"int",}),({({"string",}),"area",({"string","*",}),"people",({"string",}),"voter",}),(["main":({"This method votes for a specified person in the area.",}),"param":({"area the area to vote for someone in","person the person to vote for","voter the person voting",}),"return":({"1 on success, 0 on failure",}),]),}),"set_magistrate_board":({({"void",}),({({"string",}),"area",({"string",}),"name",}),(["main":({"This method sets the board for the specified area.",}),"param":({"area the area to set the board for","name the name of the board",}),]),}),"is_nomination_phase":({({"int",}),({({"string",}),"area",}),(["main":({"This method checks to see if we are in the nomination phase.",}),"param":({"area the area to check",}),"return":({"1 if we are, 0 if not",}),]),}),"is_grace_phase":({({"int",}),({({"string",}),"area",}),(["main":({"This method checks to see if we are in the grace phase.",}),"param":({"area the area to check",}),"return":({"1 if we are, 0 if not",}),]),}),"query_next_election_time":({({"int",}),({({"string",}),"area",}),(["main":({"This method returns the time of the next election.",}),"return":({"the time of the next election, 0 if on is in progress",}),]),}),])
protected_functions (["finish_election_phase":({({"void",}),({({"string",}),"area",}),(["main":({"This method finishes the election phase.",}),"param":({"area the area to finish the phase for",}),]),}),"finish_nomination_phase":({({"void",}),({({"string",}),"area",}),(["main":({"This method finishes the nomination phase.",}),"param":({"area the area to finish the phase for",}),]),}),"start_election":({({"void",}),({({"string",}),"area",}),(["main":({"This method starts the election.",}),"param":({"area the area to do the election for",}),]),}),"query_election_phase":({({"int",}),({({"string",}),"area",}),(["main":({"This method returns the phase of the election.",}),"param":({"area the area to check",}),"return":({"the election phase",}),]),}),])
inherits (["/obj/handlers/inherit/citizens":({}),])
main_docs (["main":({"This is the file used to do elections for magistrate positions.",}),"started":({"Mon Oct 23 22:30:19 PDT 2000",}),"author":({"Pinkfish",}),])
define_docs (["CITIZEN_ELECTION_DISABLED_TIME":([]),"CITIZEN_ELECTION_PHASE_NOMINATION":([]),"CITIZEN_ELECTION_TIME":([]),"CITIZEN_ELECTION_PHASE_TIME":([]),"CITIZEN_ELECTION_PHASE_GRACE":([]),"CITIZEN_ELECTION_PHASE_DISABLED":([]),"CITIZEN_ELECTION_PHASE_NONE":([]),"CITIZEN_ELECTION_PHASE_ELECTION":([]),"CITIZEN_PHASE_TIME":([]),"CITIZEN_GRACE_TIME":([]),])
includes (["/include/nomic_system.h":1522061544,"/include/player_handler.h":1522061544,"/include/player.h":1522061544,"/include/board.h":1522061544,"/include/playtesters.h":1522061544,])
class_docs (["election_data":({0,({({"last_election",({"int",}),}),({"phase",({"int",}),}),({"phase_start",({"int",}),}),({"nominations",({"mapping",}),}),({"votes",({"mapping",}),}),({"voted",({"string","*",}),}),}),([]),}),])
file_name "/obj/handlers/inherit/citizen_elections.c"
last_changed 1522061544
