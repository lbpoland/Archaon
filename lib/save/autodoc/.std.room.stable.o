#/obj/handlers/autodoc/autodoc_file.c
public_functions (["do_list":({({"int",}),({}),(["main":({"This method shows you a list of all the horse you have in the stables.",}),"return":({"1 on success, 0 on failure",}),]),}),"set_balance":({({"void",}),({({"string",}),"name",({"int",}),"amt",}),(["main":({"This method sets the current balance of the player stable account.",}),"param":({"name the name of the player","amt the amount to set the stable account as",}),]),}),"query_save_directory":({({"string",}),({}),(["main":({"This method queries the directory we will use to save the playerstransports in.",}),"return":({"the save directory",}),]),}),"set_save_directory":({({"void",}),({({"string",}),"directory",}),(["main":({"This method sets the directory we will use to save the playerstransports in.",}),"param":({"save the directory to save the transports in",}),]),}),"print_ok_message":({({"void",}),({({"object",}),"me",({"object","*",}),"horses",}),(["main":({"This message prints out something happy when you actually do thestabling.",}),"param":({"me the person doing the stabling","horses the horses being stabled",}),]),}),"set_cost_per_week":({({"void",}),({({"int",}),"cost_per_week",}),(["main":({"This method sets the cost per week in the stables.",}),"param":({"cost_per_week the cost per week",}),]),}),"load_me":({({"void",}),({}),(["main":({"This method loads the room.",}),]),}),"query_stabling_cost":({({"int",}),({({"string",}),"name",({"int",}),"pos",}),(["main":({"This method returns the cost of stabling the horse up to the currenttime.",}),"param":({"name the name of the owner of the stable",}),"return":({"the cost of stabling the horse",}),]),}),"save_me":({({"void",}),({}),(["main":({"This method saves the room.",}),]),}),"query_cost_per_week":({({"int",}),({}),(["main":({"This method returns the cost per week in the stables.",}),"return":({"the cost per week",}),]),}),"query_player_money":({({"int",}),({({"object",}),"player",({"string",}),"place",}),(["main":({"This method returns the amount of money on the player and in theiraccount.",}),"param":({"player the player to check the balance of","place the place in which to check the money",}),"return":({"the total money on the player and in their account",}),]),}),"remove_player_money":({({"void",}),({({"object",}),"player",({"int",}),"amt",({"string",}),"place",}),(["main":({"This method removes money from the player, it will try and remove fromtheir stable balance before taking money off them.",}),"param":({"player the player to remove the money off","amt the amount to remove","place the place the money is from",}),]),}),"do_stable":({({"int",}),({({"object","*",}),"obs",}),(["main":({"This method allows the person to stable their animal.  It will costthem (of course).",}),]),}),"adjust_balance":({({"void",}),({({"string",}),"name",({"int",}),"amt",}),(["main":({"This method adjusts the balance of the players stable account.",}),"param":({"name the name of the player","amt the amount to adjust the account by",}),]),}),"add_stable_type":({({"void",}),({({"string",}),"type",}),(["main":({"This method adds in a type of transport that can be stabled in thisstable.",}),"param":({"type the type of transport to add",}),]),}),"can_stable_type":({({"int",}),({({"string",}),"type",}),(["main":({"This method checks to see if the specified type of transport can bestabled here.",}),"param":({"type the type to check",}),"return":({"1 if it can be stabled, 0 if not",}),]),}),"query_balance":({({"int",}),({({"string",}),"name",}),(["main":({"This method returns the players current balance in their stableaccount.",}),"return":({"the current stable balance",}),]),}),"query_start_cost":({({"int",}),({}),(["main":({"This method returns the basic cost of stabling the animal.",}),"return":({"the basic cost",}),]),}),"do_return":({({"int",}),({({"string",}),"num",}),(["main":({"This method removes an animal from the stables and runs off with it.",}),"return":({"1 on success, 0 on failure",}),]),}),"add_to_stable":({({"int",}),({({"string",}),"name",({"object","*",}),"horses",}),(["main":({"This method adds the horses to the stable.",}),"param":({"name the player to whose stable we are adding the horse","horses the horses to add",}),"return":({"1 if they are successfuly added",}),]),}),"set_start_cost":({({"void",}),({({"int",}),"start_cost",}),(["main":({"This method sets the basic cost of stabling the animal.",}),"param":({"start_cost the basic cost",}),]),}),"query_stable_types":({({"string","*",}),({}),(["main":({"This method returns the types of transports that can be stabled here.",}),"return":({"the types of transport that can be stabled here",}),]),}),"do_deposit":({({"int",}),({({"string",}),"mon",}),(["main":({"This method adds money to the players stable account.",}),"param":({"obs the money to be deposited",}),"return":({"1 on success, 0 on failure",}),]),}),])
protected_functions (["check_stable":({({"void",}),({({"string",}),"mess",({"int",}),"cost",({"object","*",}),"ok",({"string",}),"place",}),(["main":({"This method is used to confirm that they want to spend theirnmoney stabling the horse.",}),"param":({"mess what the player types","cost the cost of the stabling","ok the horses being stabled",}),]),}),"query_stable":({({"class","stable","*",}),({({"string",}),"name",}),(["main":({"This method will find the stable associated with the specified player.",}),"return":({"the found stable, or 0 if not found",}),]),}),"set_stable":({({"void",}),({({"string",}),"name",({"class","stable","*",}),"value",}),(["main":({"This method sets the stable to the new value.",}),"param":({"name the name of the stable","value the new value of the stable",}),]),}),])
inherits (["/std/room/basic_room":({}),])
main_docs (["main":({"A stable in which to house your lucky transport.",}),"started":({"Tue Nov 30 23:37:12 PST 1999",}),"author":({"Pinkfish",}),])
define_docs ([])
includes (["/include/player.h":1522061544,"/include/shops/bank.h":1522061544,"/include/playtesters.h":1522061544,"/include/money.h":1522061544,])
class_docs (["stable":({0,({({"date_in",({"int",}),}),({"last_paid",({"int",}),}),({"name",({"string",}),}),({"save_info",({"mixed","*",}),}),}),([]),}),])
file_name "/std/room/stable.c"
last_changed 1522061544
