#/obj/handlers/autodoc/autodoc_file.c
public_functions (["do_set_fine":({({"int",}),({({"int",}),"i",}),([]),}),"query_lost_damaged_fine":({({"int",}),({}),([]),}),"query_loans":({({"mapping",}),({({"string",}),"name",}),(["main":({"Returns a mapping of book ids to due back dates for the given player.",}),"param":({"name the player",}),"return":({"a mapping in the form ([ book id : due back ])",}),]),}),"add_book_to_library":({({"varargs","int",}),({({"mixed",}),"thing",({"int",}),"copies",({"string",}),"cap_title",({"string",}),"cap_author",({"int",}),"borrowable",}),(["main":({"This function adds the specified object to the library ",}),"param":({"thing Either a filename, or object. If its an object we record its autoload info","copies how many copies to add","cap_title The capitalized title its cataloged under","cap_author The capitalized author of the work","borrowable 1 if it can be borrowed, 0 if its reference only",}),]),}),"set_player_contributable":({({"void",}),({({"int",}),"i",}),([]),}),"query_loan_length":({({"int",}),({}),([]),}),"set_fine_per_day":({({"void",}),({({"int",}),"i",}),([]),}),"clear_loan":({({"void",}),({({"mixed",}),"player",({"int",}),"id",({"int",}),"calc_fines",}),(["main":({"This clears the loan of library book id the specified player.If its overdue it sorts out adding a fine to his name.",}),"param":({"player Either the player name or object","id the library book id","calc_fines if this is 1, then we add fines onto the playerif appropriate, if 0 then we ignore fines and just clear the loan",}),]),}),"set_loan_length":({({"void",}),({({"int",}),"i",}),([]),}),"set_save_file":({({"void",}),({({"string",}),"s",}),([]),}),"set_max_loans":({({"void",}),({({"int",}),"i",}),([]),}),"set_library_name":({({"void",}),({({"string",}),"str",}),([]),}),"query_access":({({"int",}),({({"mixed",}),"player",}),([]),}),"query_player_contributable":({({"int",}),({}),([]),}),"set_access":({({"void",}),({({"string",}),"player",({"int",}),"access",}),([]),}),"query_borrow_func":({({"function",}),({}),([]),}),"query_save_file":({({"string",}),({}),([]),}),"query_max_loans":({({"int",}),({}),([]),}),"query_borrowed_by":({({"mapping",}),({({"int",}),"id",}),(["main":({"Returns a mapping of players who borrowed the given book id, mapped to their due back dates.",}),"param":({"id valid book id",}),]),}),"do_set_loan_length":({({"int",}),({({"int",}),"days",}),([]),}),"do_lost_damaged_fine":({({"int",}),({({"int",}),"i",}),([]),}),"query_fine_per_day":({({"int",}),({}),([]),}),"do_mark":({({"int",}),({({"int",}),"id",({"int",}),"flag",}),([]),}),"set_lost_damaged_fine":({({"void",}),({({"int",}),"i",}),([]),}),"query_fine":({({"int",}),({({"string",}),"name",}),(["main":({"",}),"param":({"name the string name of the person to check",}),"return":({"How much of a fine this person has",}),]),}),"query_library_name":({({"string",}),({}),([]),}),"do_report":({({"int",}),({({"int",}),"id",({"string",}),"arg",({"string",}),"player",}),([]),}),"set_borrow_func":({({"void",}),({({"function",}),"f",}),([]),}),])
protected_functions ([])
inherits (["/std/room/basic_room":({}),])
main_docs (["main":({"Library inherit. Allows players to take out books on loan. Ifset to be player contributable, then books (most likely player written, but any kind) can be added/removed by designated librarian players.",}),"author":({"Aquilo",}),])
define_docs (["AUTHOR_PROP":([]),"BORROWED_BY_PROP":([]),"DUE_BACK_PROP":([]),"FROM_LIBRARY_PROP":([]),"BASE_PATHS":([]),"REFERENCE_ONLY_PROP":([]),"TITLE_PROP":([]),"LIBRARIAN_ACCESS":([]),"USER_ACCESS":([]),])
includes (["/include/player_handler.h":1522061544,"/include/player.h":1522061544,"/include/am_time.h":1522061544,"/include/language.h":1522061544,"/include/shops/bank.h":1522061544,"/include/playtesters.h":1522061544,"/include/money.h":1522061544,"/include/book_handler.h":1522061544,])
class_docs (["_book":({0,({({"path",({"string",}),}),({"auto_load",({"string",}),}),({"cap_title",({"string",}),}),({"cap_author",({"string",}),}),({"loaned",({"mapping",}),}),({"borrowable",({"int",}),}),({"copies",({"int",}),}),({"total_borrowed",({"int",}),}),}),(["element":({"path the path to the item, if applicable","auto_load if no path, we store the object whole in this string","cap_title the capitalized title of the book","cap_author the capitalized author of the book","borrowable 1 if this book can be borrowed, 0 if not","copies Total number of copies owned by library","loaned An array of due back dates for loaned out copies","total_borrowed total no of times this book has been borrowed",}),"main":({"This is all the info on one of our stored books.",}),]),}),"_loan":({0,({({"id",({"int",}),}),({"due_back",({"int",}),}),}),(["element":({"id the librarybook id num","due_back the rl time due back, in secs from 1970",}),"main":({"This holds info on a book a player has borrowed",}),]),}),"_account":({0,({({"total_fines_paid",({"int",}),}),({"lost_damaged",({"int",}),}),({"loans",({"class","_loan","*",}),}),}),(["element":({"total_fines_paid how much this blokie has paid in fines in total","damaged_books total number of books he has damaged","lost_books total number of books he has lost","loans info on what  books he currently has out",}),"main":({"Holds info on a player.",}),]),}),])
file_name "/std/room/inherit/p_library.c"
last_changed 1522061544
