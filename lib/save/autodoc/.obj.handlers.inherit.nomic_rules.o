#/obj/handlers/autodoc/autodoc_file.c
public_functions (["query_can_change_rule":({({"int",}),({({"string",}),"area",({"class","nomic_rule",}),"rule",}),(["main":({"This method checks to see if the specified rule can be changed.",}),"param":({"area the area in which the rule will be changed in","rule the rule to check",}),"return":({"1 if it can be changed, 0 if not",}),]),}),"query_type_number":({({"int",}),({({"string",}),"name",}),(["main":({"This method returns the number for the corresponding type name.",}),"param":({"name the name of the area to get the number of",}),"return":({"the type number",}),]),}),"change_nomic_rule":({({"int",}),({({"string",}),"area",({"class","nomic_rule",}),"rule",}),(["main":({"This method moves a rule from one type to another.",}),"param":({"area the area the rule is added in","rule the rule to move","type the new type of the rule",}),"return":({"the new number of the rule, NOMIC_ERROR on fai;l",}),]),}),"rule_as_string":({({"string",}),({({"int",}),"indent",({"class","nomic_rule",}),"rule",}),(["main":({"This method returns the rule as a string.",}),"param":({"rule the rule to make a string",}),"return":({"the string version of us",}),]),}),"create_area":({({"int",}),({({"string",}),"area",}),(["main":({"This method creates an new nomic area.",}),"param":({"area the new nomic area name",}),"return":({"1 on success, 0 on failure",}),]),}),"add_nomic_rule":({({"int",}),({({"string",}),"area",({"int",}),"type",({"string",}),"creator",({"string",}),"text",}),(["main":({"This method adds a nomic rule into the system.",}),"param":({"area the area the rule is added in","type the type of rule to add","creator the person that created the rule","text the text associated with the rule",}),"return":({"the new number of the rule, NOMIC_ERROR on fai;l",}),]),}),"query_nomic_rule":({({"class","nomic_rule",}),({({"string",}),"area",({"int",}),"id",}),(["main":({"This method returns a nomic rule for the specified area.",}),"param":({"area the area to get the rule in","id the id of the rule to match",}),"return":({"0 if failed, the class if succeeded",}),]),}),"remove_nomic_rule":({({"int",}),({({"string",}),"area",({"int",}),"id",}),(["main":({"This method removes a nomic rule from the system.",}),"param":({"area the area the rule is removed in","id the id of the rule to remove",}),"return":({"the status of the removal, NOMIC_ERROR on fai;l",}),]),}),"query_all_nomic_rules":({({"class","nomic_rule","*",}),({({"string",}),"area",}),(["main":({"This method returns all the nomic rules for the area.",}),"param":({"area the area to get the rule sin",}),"return":({"all the rules",}),]),}),"int_remove_nomic_rule":({({"int",}),({({"string",}),"area",({"int",}),"id",}),(["main":({"This method by passes the standard nomic rules check, it can be usedto remove an immutable rule.",}),]),}),"query_type_name":({({"string",}),({({"int",}),"type_no",}),(["main":({"This method returns the name of the corresponding type name.",}),"param":({"type_no the type number",}),"return":({"the type name string",}),]),}),"find_nomic_rule":({({"class","nomic_rule",}),({({"string",}),"area",({"string",}),"creator",({"string",}),"text",}),(["main":({"This method searches through for the specified rule.  This stops thesame rule being added more than once by some error in the code.",}),"param":({"area the area the rule is in","creator the creator of the rule","text the text of the rule",}),"return":({"the rule if it is found, 0 if not",}),]),}),])
protected_functions (["add_nomic_rule_class":({({"int",}),({({"string",}),"area",({"class","nomic_rule",}),"new_rule",({"int",}),"type",}),(["main":({"This method adds a nomic rule into the system.",}),"param":({"area the area the rule is added in","new_rule the rule that is being added","type the type of the rule",}),"return":({"the new number of the rule, NOMIC_ERROR on fai;l",}),]),}),"move_nomic_rule":({({"int",}),({({"string",}),"area",({"class","nomic_rule",}),"rule",({"int",}),"type",}),(["main":({"This method moves a rule from one type to another.",}),"param":({"area the area the rule is added in","rule the rule to move","type the new type of the rule",}),"return":({"the new number of the rule, NOMIC_ERROR on fai;l",}),]),}),])
inherits ([])
main_docs (["main":({"This handler deals with all the nomic rules for councils.",}),"started":({"Fri Jun 23 19:51:04 PDT 2000",}),"author":({"Pinkfish",}),])
define_docs ([])
includes (["/include/nomic_system.h":1522061544,])
class_docs ([])
file_name "/obj/handlers/inherit/nomic_rules.c"
last_changed 1522061544
