#/obj/handlers/autodoc/autodoc_file.c
public_functions (["remove_feature":({({"void",}),({({"string",}),"feature",}),(["main":({"This method removes a feature from the world map.",}),"param":({"feature the feature to remove",}),]),}),"find_terrain_at":({({"string",}),({({"int",}),"x",({"int",}),"y",}),(["main":({"This method finds the terrain at the specific location.",}),"param":({"x the x co-ordinate","y the y co-ordinate",}),"return":({"the path to the terrain",}),]),}),"query_features_at":({({"string","*",}),({({"int",}),"x",({"int",}),"y",}),(["main":({"This method returns the list of all the features available at thespecific location.",}),"param":({"x the x position","y the y position",}),"return":({"the features at the location",}),]),}),"add_feature":({({"void",}),({({"string",}),"feature",}),(["main":({"This method adds a feature into the world map.",}),"param":({"feature the feature to add",}),]),}),"generate_blocking":({({"mixed","*",}),({({"int",}),"x",({"int",}),"y",({"string","*",}),"start",({"string","*",}),"straight",({"string","*",}),"diagonal",}),([]),}),"query_map_template":({({"mixed","*",}),({({"int",}),"size",}),(["main":({"This method returns the template for the specific size of themap.  This is for visibility considerations.",}),"param":({"size the size of the template",}),"return":({"the template",}),]),}),"query_features_in_region":({({"string","*",}),({({"int",}),"x1_orig",({"int",}),"y1_orig",({"int",}),"x2_orig",({"int",}),"y2_orig",}),(["main":({"This method finds all the features inside the specified region.  Thisis quite expensive in terms of evaluation cost, so do not try and callthis too much.  Cache the results if possible.",}),"param":({"x1 the top x location","y1 the top y location","x2 the bottom x location","y2 the bottom y location",}),"return":({"the features in the region",}),]),}),"find_room_at":({({"string",}),({({"int",}),"x",({"int",}),"y",}),(["main":({"This method finds the specific room at the specific location",}),"param":({"x the x co-ordinate","y the y co-ordinate",}),"return":({"the path to the room",}),]),}),"add_terrain":({({"int",}),({({"string",}),"path",({"int",}),"x1",({"int",}),"y1",({"int",}),"x2",({"int",}),"y2",}),(["main":({"This method adds the specified terrain to the world map.",}),]),}),"query_blocking_template":({({"string","*",}),({({"int",}),"x",({"int",}),"y",({"int",}),"type",}),(["main":({"Find the template to use for the area blocked by an obstacle.This will do nifty template fitting stuff for obstacles.",}),"param":({"x the x co-ordinate of the blockage","y the y co-ordinate of the blockage","type the type is 0 for normal, 1 for straight, 2 for diagonal",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This is the handler to help control the world map.  It co-ordinatesall the terrains connecting themselves together.  All terrains arerectangular.",}),"started":({"Fri Mar 22 16:58:35 PST 2002",}),"author":({"Pinkfish",}),])
define_docs (["OFFSET":([]),"REGION_WIDTH":([]),"REGION_BOUNDARY":([]),"REGION_SIZE":([]),"SAVE_DIR":([]),"BOUNDARY":([]),])
includes (["/include/terrain_map.h":1522061544,])
class_docs (["region":({0,({({"terrains",({"mixed","*",}),}),({"features",({"string","*",}),}),({"last_touched",({"int",}),}),}),([]),}),])
file_name "/obj/handlers/world_map.c"
last_changed 1522061544
