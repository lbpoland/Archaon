#/obj/handlers/autodoc/autodoc_file.c
public_functions (["query_citizen":({({"string",}),({({"string",}),"citizen",}),(["main":({"This method checks to see if the specified person is a citizen andwhere they are a citizen.",}),"param":({"citizen the person to find where they are the citizen of",}),"return":({"where they are a citizen, or 0 on failure",}),]),}),"remove_citizen":({({"int",}),({({"string",}),"area",({"string",}),"citizen",}),(["main":({"This method adds a citizen to the specified area.",}),"param":({"area the area to add the citizen too","citizen the citizen to add to the area",}),]),}),"query_number_of_citizens":({({"int",}),({({"string",}),"area",}),(["main":({"This method returns the number of citizens in the given area.",}),"param":({"area the area to lookup",}),"return":({"the number of citizens",}),]),}),"is_magistrate_anywhere":({({"int",}),({({"string",}),"person",}),(["main":({"This method checks to see if the person is a magistrate anywhere.It will return 1 if they are a magistrate, 0 if they are not.",}),"param":({"person the person to check",}),"return":({"1 if they are, 0 if not",}),]),}),"add_citizen":({({"int",}),({({"string",}),"area",({"string",}),"citizen",}),(["main":({"This method adds a citizen to the specified area.",}),"param":({"area the area to add the citizen too","citizen the citizen to add to the area",}),]),}),"query_citizenship_areas":({({"string","*",}),({}),(["main":({"This method returns all the areas for citizenship.",}),"return":({"the possible areas for citizenship",}),]),}),"is_magistrate_of":({({"int",}),({({"string",}),"area",({"string",}),"magistrate",}),(["main":({"This method checks to see if the specified person is a magistrate ornot.",}),"param":({"area the area to check them in","magistrate the person to check for magistrateship",}),"return":({"1 if they are a magistrate, 0 if not",}),]),}),"create_area":({({"int",}),({({"string",}),"area",({"int",}),"num_magistrates",}),(["main":({"This method creates an area for citizens to womble in.",}),"param":({"area the name of the area to create","num_magistrates the number of magistrates",}),"return":({"1 on succes, 0 on failure",}),]),}),"is_citizen_of":({({"int",}),({({"string",}),"area",({"string",}),"citizen",}),(["main":({"This method checks to see if the specified person is a citizen ornot.",}),"param":({"area the area to check them in","citizen the person to check for citizenship",}),"return":({"1 if they are a citizen, 0 if not",}),]),}),"query_magistrates":({({"string","*",}),({({"string",}),"area",}),(["main":({"This method returns the current magistrates for the area.",}),"param":({"area the area to get the magistrates for",}),"return":({"the array of the current magistrates",}),]),}),"query_number_of_magistrates":({({"int",}),({({"string",}),"area",}),(["main":({"This method returns the number of magistrates needed for the area.",}),"param":({"area the area to check the magistrates for",}),"return":({"the number of allow\\ed magistrates",}),]),}),"add_magistrate":({({"int",}),({({"string",}),"area",({"string",}),"magistrate",}),(["main":({"This method adds a magistrate to the area.  If there are no moremagistrate slots then this fails.",}),"param":({"area the area to add the magistrate too","magistrate the magistrate to add",}),]),}),])
protected_functions (["setup_magistrates":({({"void",}),({({"string",}),"area",({"string","*",}),"magistrates",}),(["main":({"This method sets up a new bunch of elected magistrates.",}),"param":({"area the area to setup them up in","magistrates the new bunch to setup",}),]),}),])
inherits ([])
main_docs (["main":({"This handler keeps track of citizenships and magistrates.",}),"started":({"Fri Jun 23 20:38:10 PDT 2000",}),"author":({"Pinkfish ",}),])
define_docs ([])
includes (["/include/player_handler.h":1522061544,"/include/player.h":1522061544,"/include/playtesters.h":1522061544,])
class_docs ([])
file_name "/obj/handlers/inherit/citizens.c"
last_changed 1522061544
