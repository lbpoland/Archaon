#/obj/handlers/autodoc/autodoc_file.c
public_functions (["add_to_honour_roll":({({"void",}),({({"string",}),"person",({"string",}),"reason",({"string",}),"added_by",}),(["main":({"This method adds a person into the honour role with the specifedreason.",}),"param":({"person the person to honour","reason the reason they were added","added_by the person added by",}),]),}),"do_list_honour":({({"int",}),({}),(["main":({"List everyone on the honour roll.",}),]),}),"query_controlled_titles":({({"string","*",}),({}),(["main":({"This method returns the controlled title for the inherit.",}),"return":({"the controlled title",}),]),}),"inform_of_honour_change":({({"void",}),({({"string",}),"type",({"string",}),"person",({"string",}),"reason",({"string",}),"changed_by",}),(["main":({"This method does any informing about the change in the honourstatus.",}),"param":({"type add/remove","person the person being added/removed","reason the reason for the addition/removal","changed_by the person who did the change",}),]),}),"readd_all_titles":({({"void",}),({}),(["main":({"A method to go through and specifically readd everyone to the list.This helps if something goes wrong and all the titles get lost.",}),]),}),"remove_from_honour_roll":({({"void",}),({({"string",}),"person",}),(["main":({"This removes the person from the honour role.",}),"param":({"person the person to remove",}),]),}),"is_on_honour_roll":({({"int",}),({({"string",}),"person",}),(["main":({"This method checks to see if the person is on the honour role.",}),"param":({"person the person to check",}),]),}),"end_honour_add":({({"void",}),({({"string",}),"reason",({"string",}),"person",({"string",}),"bing",}),(["main":({"This is called by the editor when the reason has been set.",}),"param":({"reason the reason for the addition","persno the person being added",}),]),}),"do_honour_remove":({({"int",}),({({"string",}),"person",({"string",}),"reason",}),(["main":({"This allows a person to be removed from the honour roll.",}),"param":({"person person to add","reason reason to add them",}),]),}),"do_honour_add":({({"int",}),({({"string",}),"person",}),(["main":({"This allows a person to be added to the honour roll.",}),"param":({"person person to add","reason reason to add them",}),]),}),"set_controlled_titles":({({"void",}),({({"string","*",}),"title",}),(["main":({"This method sets the title we are to control.",}),"param":({"title the title to control",}),]),}),"honour_roll_confirm":({({"void",}),({({"string",}),"response",({"string",}),"person",({"string",}),"reason",}),(["main":({"This is called by the system to confirm the addition.",}),"param":({"reason the reason for the addition","persno the person being added",}),"Param":({"response the yes/no response",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This room keeps track of the people who have been given the specifiedhonoury title and why.  It also makes sure that anyone who logs onwith the title is allowed to have it.<p>Don't forget to add the room to the title handler as controllingthis title.",}),"started":({"Wed Oct 17 13:15:03 PDT 2001",}),"author":({"Pinkfish",}),])
define_docs ([])
includes (["/include/player_handler.h":1522061544,"/include/player.h":1522061544,"/include/playtesters.h":1522061544,])
class_docs (["honour":({0,({({"time_added",({"int",}),}),({"reason",({"string",}),}),({"cap_name",({"string",}),}),({"added_by",({"string",}),}),}),([]),}),])
file_name "/std/room/inherit/honours.c"
last_changed 1522061544
