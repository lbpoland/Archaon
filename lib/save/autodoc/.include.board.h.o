#/obj/handlers/autodoc/autodoc_file.c
public_functions ([])
protected_functions ([])
inherits ([])
main_docs (["main":({"Defines and support stuff for the board handler.  This is one of the veryearly objects/files.  One which has not changed overly much either.",}),"author":({"Pinkfish",}),])
define_docs (["B_PRIV_READ_ONLY":(["main":({"Make the board read only.",}),]),"B_SUBJECT":(["main":({"The index into the subject array that is the subject.",}),"see":({"/obj/handlers/board_handler->get_subjects()",}),]),"B_ACCESS_WRITE":(["main":({"This is the parameter passed in the access method if the check is forwriting.",}),]),"MASTER_OB":(["main":({"The master object.",}),]),"B_PRIV_ACCESS_RESTRICTED":(["main":({"Restrict access to a specified group of people.",}),]),"BOARD_FILE":(["main":({"This is the main save file for the board handler.  It has the currentboards, subjects, permissions etc saved to it.",}),]),"BOARD_RAM_DIR":(["main":({"This is the directory into which the individual board messages aresaved temporarily.",}),]),"NEWS_RC":(["main":({"The name of the property on the player that has the news rc.  The news RCis the last time each board was read.",}),]),"B_NUM":(["main":({"The index into the subject array that is the note number associated withthe note.",}),]),"B_PRIV_NO_INFORM":(["main":({"Don't inform people when messages are posted.",}),]),"B_PRIV_ACCESS_RESTRICTED_METHOD":(["main":({"Do all the access checks and everything through another function check inanother file.",}),]),"B_PRIV_TYPE_MASK":(["main":({"The type mask.",}),]),"B_PRIV_ACCESS_RESTRICTED_FILE":(["main":({"Restrict access to a specified group of files.",}),]),"BOARD_HAND":(["main":({"The path to the board handler object itself.",}),]),"B_ACCESS_DELETE":(["main":({"This is the parameter passed in the access method if the check is fordeleting.",}),]),"B_PRIV_NORMAL":(["main":({"The default privilages for a board.",}),]),"BOARD_DIR":(["main":({"This is the directory into which the individual board messages aresaved.",}),]),"BOARD_SOCIAL_POINT_COST":(["main":({"This amount of social points used to post to the boards.",}),]),"B_ACCESS_APPROVE":(["main":({"This is the parameter passed in the access method if the check is forapproving a post.",}),]),"BOARD_ORDER":(["main":({"This is the property on the player that stores the board order.  Theboard order is the order in which the boards are read from the web andby using the 'new' word inside the mud itself.",}),]),"B_NAME":(["main":({"The index into the subject array that is the name of the person whoposted the note.",}),]),"B_REPLY_POSTER":(["main":({"This is the type to use if the reply should be mailed to theposter.",}),]),"B_REPLY_NUM":(["main":({"The index into the subject array that points back to the message wefollowed up to.",}),]),"B_ACCESS_READ":(["main":({"This is the parameter passed in the access method if the check is forreading.",}),]),"BOARD_WEB":(["main":({"The path to the web board reader.",}),]),"B_REPLY_NAMED":(["main":({"This is the type to use if the reply should be mailed to the specifiedperson in the data field.",}),]),"B_TIME":(["main":({"The index into the subject array that contains the time the note wasposted.",}),]),"B_REPLY_TYPE":(["main":({"The index into the subject array that determines who the followups andreplies to the note should go to.  If this value is 0 then thefollowups go to the board and the replies go to the person whoposted it.  If it is a string then the followups and replies go to theperson in the string.",}),]),"B_ACCESS_INFORM":(["main":({"This is the parameter passed in the access method when an informis required.",}),]),])
includes ([])
class_docs (["reply_type":({0,({({"type",({"int",}),}),({"data",({"mixed",}),}),}),([]),}),])
file_name "/include/board.h"
last_changed 1522061544
