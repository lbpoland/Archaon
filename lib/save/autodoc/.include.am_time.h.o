#/obj/handlers/autodoc/autodoc_file.c
public_functions ([])
protected_functions ([])
inherits ([])
main_docs (["main":({"This file defines the array offsets for use in the am_time functionsand the length of things like days, minutes and seconds in theam calendar.  It also defines the names of the months and daysand their corresponding values.",}),"see":({"/obj/handlers/am_time_handler",}),])
define_docs (["AM_DAYS_PER_WEEK":(["main":({"The number of days per week in the Ankh-Morpork calenda.",}),]),"AM_MINUTES_PER_HOUR":(["main":({"The numbers of minutes per hour in the Ankh-Morpork calenda.",}),]),"AM_TIME_HANDLER":(["main":({"Thgis is the pointer to the handler for am time functions.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_YEAR":(["main":({"This is the year index into the am_time_array() return value.",}),"example":({"arr = AM_TIME_HANDLER->am_time_array(time());write(\"The year is \" + arr[AM_TIME_YERAR] + \".\\n\");",}),]),"AM_TIME_DAY_OF_WEEK":(["main":({"This is the day of week index into the am_time_array() return value.",}),"see":({"/obj/handlers/am_time_handler",}),"example":({"mixed *arr;arr = AM_TIME_HANDLER->am_time_array(time());write(\"We are in the \" + arr[AM_TIME_DAY_OF_WEEK] + \" day of week.\\n\");",}),]),"AM_TIME_APRIL":(["main":({"This is the value associated with the month of April in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_MAY":(["main":({"This is the value associated with the month of May in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_DAY_OF_MONTH":(["main":({"This is the day of month index into the am_time_array() return value.",}),"see":({"/obj/handlers/am_time_handler",}),"example":({"mixed *arr;arr = AM_TIME_HANDLER->am_time_array(time());write(\"We are in the \" + arr[AM_TIME_DAY_OF_MONTH] + \" day of month.\\n\");",}),]),"AM_TIME_MONTH":(["main":({"This is the month index into the am_time_array() return value.",}),"see":({"/obj/handlers/am_time_handler",}),"example":({"mixed *arr;arr = AM_TIME_HANDLER->am_time_array(time());write(\"We are in the \" + arr[AM_TIME_MONTH] + \" month.\\n\");",}),]),"AM_TIME_GRUNE":(["main":({"This is the value associated with the month of Grune in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_SATURDAY":(["main":({"This is the value associated with the day Saturday in theam time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_DAYS_PER_HALF_YEAR":(["main":({"The number of days in each year in the Ankh-Morpork calendar.",}),]),"AM_SECONDS_PER_WEEK":(["main":({"The numbers of seconds in each month in the Ankh-Morpork calendar.",}),]),"AM_TIME_OCTEDAY":(["main":({"This is the value associated with the day Octeday in theam time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_SECONDS_PER_HOUR":(["main":({"The numbers of seconds per house in the Ankh-Morpork calendar.",}),]),"AM_TIME_MARCH":(["main":({"This is the value associated with the month of March in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_SEKTOBER":(["main":({"This is the value associated with the month of Sektober in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_ICK":(["main":({"This is the value associated with the month of Ick in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_TUESDAY":(["main":({"This is the value associated with the day Tuesday in theam time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_FRIDAY":(["main":({"This is the value associated with the day Friday in theam time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_MINUTE":(["main":({"This is the minute index into the am_time_array() return value.",}),"see":({"/obj/handlers/am_time_handler",}),"example":({"mixed *arr;arr = AM_TIME_HANDLER->am_time_array(time());write(\"Time is \" + arr[AM_TIME_HOUR] + \":\" + arr[AM_TIME_MINUTE]\".\\n\");",}),]),"AM_TIME_DECEMBER":(["main":({"This is the value associated with the month of December in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_HOUR":(["main":({"This is the hour index into the am_time_array() return value.",}),"see":({"/obj/handlers/am_time_handler",}),"example":({"mixed *arr;arr = AM_TIME_HANDLER->am_time_array(time());write(\"Time is \" + arr[AM_TIME_HOUR] + \":\" + arr[AM_TIME_MINUTE]\".\\n\");",}),]),"AM_TIME_JUNE":(["main":({"This is the value associated with the month of June in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_WEDNESSDAY":(["main":({"This is the value associated with the day Wednessday in theam time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_EMBER":(["main":({"This is the value associated with the month of Ember in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_SPUNE":(["main":({"This is the value associated with the month of Spune in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_MINUTES_PER_DAY":(["main":({"The numbers of minutes per day in the Ankh-Morpork calenda.",}),]),"AM_SECONDS_PER_DAY":(["main":({"The numbers of seconds in each day in the Ankh-Morpork calendar.",}),]),"AM_SECONDS_PER_MINUTE":(["main":({"The numbers of seconds per minute in the Ankh-Morpork calenda.",}),]),"AM_TIME_SUNDAY":(["main":({"This is the value associated with the day Sunday in theam time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_FORMAT_NO_TIME":(["main":({"A flag used to be passed into the format parameter for the amtimefunction.  It turns off the displaying of the time; ie: 12:48amdisappears.",}),]),"AM_HOURS_PER_DAY":(["main":({"The numbers of minutes per hour in the Ankh-Morpork calenda.",}),]),"AM_SECONDS_PER_HALF_YEAR":(["main":({"The number of seconds per year in the Ankh-Morpork calendar.",}),]),"AM_TIME_THURSDAY":(["main":({"This is the value associated with the day Thursday in theam time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_MONDAY":(["main":({"This is the value associated with the day Monday in theam time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_FEBURARY":(["main":({"This is the value associated with the month of Feburary in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_OFFLE":(["main":({"This is the value associated with the month of Offle in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),"AM_TIME_PRIMUS":(["main":({"This is the primus index into the am_time_array() return value.A year is primus if it is in the first 400 days, not the second.",}),"example":({"arr = AM_TIME_HANDLER->am_time_array(time());write(\"The year is \" + arr[AM_TIME_YERAR] + \".\\n\");",}),]),"AM_START_YEAR_DATE":(["main":({"This is the offset added to the year when it is calculated from thereal year.",}),]),"AM_TIME_AUGUST":(["main":({"This is the value associated with the month of August in the am time calendar.",}),"see":({"/obj/handlers/am_time_handler",}),]),])
includes ([])
class_docs (["am_time":({0,({({"year",({"int",}),}),({"primus",({"int",}),}),({"minute",({"int",}),}),({"hour",({"int",}),}),({"month",({"int",}),}),({"day_of_week",({"int",}),}),({"day_of_month",({"int",}),}),({"day_of_year",({"int",}),}),}),(["main":({"A class to hold all the information for am times.",}),"member":({"year the year of the time","prime if the section is price (the first 400 days) or secundus","minute the minute of the time","hour the hour of the time","month the month of the time","day_of_week the day of the week","day_of_month the day of the month",}),"see":({"/obj/handlers/am_time->query_am_time_class()",}),]),}),])
file_name "/include/am_time.h"
last_changed 1522061544
