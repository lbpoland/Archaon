#/obj/handlers/autodoc/autodoc_file.c
public_functions ([])
protected_functions ([])
inherits ([])
main_docs (["main":({"Header file for player-run shops.<p><b>Introduction</b></p><p>The aim of the player-run shop is to provide an environment whereplayers can interact with each other, and the shop, with no interferencefrom creators. Ideally, once the shop is set up, and with the exceptionof the implementation of new features or code maintenance, no furtherinput should be required.</p><p>All administration tasks can be performed by players. These taskstypically include (but are not limited to): adding and removing stockpersonnel decisions (hiring/firing/disciplinary) deciding what to stock& for how much it is bought/sold increasing/decreasing stock capacity(for a price) setting pay & bonus levels.</p><p>The only involvement needed by a creator after setup is the initialrole of manager until employees have been promoted to take this position. </p><p><b>Appearance</b></p><p><b><i>Customers</i></b></p><p>From a customers' point of view, the shop should appear to functionsimilarly to a normal shop, with the obvious addition of players actingas shopkeepers. In the absence of players, there is an npc shopkeeperto serve customers. The npc has two customer interfaces.<ul><li>It will recognise the standard \"buy\", \"sell\", \"list\",\"browse\" commands.</li><li>It will recognise certain patterns of speech to performthe same function.</li><\\ul>The npc will then react to the customer's request, performing the sameactions as a player would.</p><p>A bell is provided on the counter to alert any employees loggedonto DW in the event that the npc is not available. Employees thatare clocked in are listed in the description of the shop front. Itis here that a customer may make a complaint, suggestion, or applyfor employment with the shop. Managers are then mailed to informthem of a new application. Confirmations of employment, orcancellations of application are also made here.</p><p><b><i>Employees</i></b></p><p>Once an application has been accepted, confirmed, and subject toany vacancies, the applicant is hired and becomes an employee of theshop. Employees are able to move past the counter into the room beyond.From here, it should be possible to access the office, storeroom andmanagers' office.</p><p>Employees are responsible for replenishing stock and servingcustomers. Each is given a staff handbook and a special badge whichacts as a talker, allowing employees to keep in touch on a dedicated channel. This channel is also used by the shop bell to alert employeesto a customer in the shop.</p><p>Before undertaking any actions in the shop, it is important that theemployee clocks on in the office. Also in the office is the shop's chart,listing the lines of stock carried. This chart displays the buying andselling price, as well as the number of items currently in stock.</p><p>The stock itself is held in the stockroom, in one or more stockcabinets. Each item is allocated a cabinet and the employee can eitherplace items in a specific cabinet, or let the stockroom work out wherethey should go. Similarly, an employee can specify which cabinet toremove stock from, or let the stockroom determine that. Listing stockis an artform in itself - stock can be listed by item, cabinet, item incabinet, or all stock.</p><p>When buying or selling items, the employee will need to handlemoney. This is kept in the register behind the counter. Along withthe stock, all changes made are logged and viewable by supervisorsand managers. The logbook behind the counter is for employees torecord for themselves what they have done and why.</p><p>Of course, a big incentive to do this work is to be paid for it.Employees are paid every DW month, direct into their bank account.They also receive a profit-related bonus each month, which they claimfrom the office. The pay and bonus structure is discussed later, andties in nicely with EchoGnomics. Along with the pay, they accumulatepoints towards promotion.</p><p>Promotion is now not mandatory, and employees can deselectthemselves if they wish not to be promoted. Any player with the\"no score\" property is automatically de- selected. Promotion is theonly personnel issue that managers have no control over. It is doneautomatically to minimise favouritism. Once an employee has achievedsufficient points, and subject to vacancies, they are promoted to <i>Supervisor<i>.</p><p><b><i>Supervisors</i></b></p><p>Supervisors receive a higher wage packet than employees - 1.5times the value, to be exact. Their duties include those of theemployees, with several additions. They are responsible for decidingwhat items should be bought and sold, and at what price. Along withthis, they assign items to cabinets. To assist them, they are able toview the general and chart logs. These logs indicate what is beingbought/sold, and what updates have been made to the chart. Again,supervisors accumulate points towards promotion, and will eventuallybe promoted to <i>Manager</i>.</p> <p><b><i>Managers</i></b></p><p>Managers receive double the wage of employees. Their duties,however, are quite involved. They include setting staffing levels,pay rates, renting new storage space, hiring/firing/disciplinaryissues, and setting the shop's policies. This is in addition tothe duties performed by supervisors and employees.Delegation would seem to play a part :-) </p><p>Managers cannot be promoted, and so have nothing to \"work towards\".Experience has shown, however, that players in this position gain theirenthusiasm from the role itself, along with that pay packet. This viewis reinforced by the fact that most managers will prefer to retire thanresign.</p><p>A retired manager has no active role in the shop, other than votingon policy suggestions, and receives no pay. Those employed by Tarnach'shave been shown to be happy acting as 'mentors'. </p><p>The main advantage of being a retired manager is the lack ofcommitment needed - a manager must be very active in the shop,otherwise risking demotion. This demotion follows a warning, recorded on an employee's record. The same procedure applies tosupervisors_, within a longer timescale. <i>Employees</i> have evenlonger, but risk being fired rather than demoted. These firings anddemotions are automatic, and are one method of staff turnover to helpensure a fair system to allow new employees and promotions. If anemployee has a valid reason to be away, they can notify a managerwho can place them on leave. This ensures they are not fired ordemoted if they are genuinely on holiday etc.</p><p>The code also includes a hook to the refresh handler. The officeis registered automatically, and appropriate action taken when an employee refreshes.<ul><li>If the character is deleted, the employee data is also deleted.</li><li>If an applicant refreshes, their application is terminated.</li><li>If a retired manager refreshes, their employment is terminated.</li><li>If any other employee refreshes totally, their employment isterminated, but if they only partially refresh, they revert to beinga \"new employee\".</li></ul></p><p><b>Echo-gnomics</b></p><p>One problem with the original Tarnach's economic strategy is thatemployees' pay was created from thin air, whilst the profits accruedwithout depletion. In order to do something with the profits, theywere distributed monthly between the employees by means of a bonuspayment. This is still less than desirable, however, as pay is stillbeing created from nothing. </p><p>The new system departs from this idea, and all shop's expenditurecomes from shop's profits. Shop's expenditure consists of:<ul><li>Buying stock</li><li>Monthly bonus fund</li><li>Employee pay</li><li>Renting store cabinets</li></ul></p> <p>These are listed in order of departure from the original concept.Stock purchases have always been funded by shop's profits. The monthlybonus fund, as explained above, was added later. A new departure isthat pay also comes from profits. Finally, the cabinet rental wasonly made possible by the redesign of the stockroom. </p><p>Another major departure from the original idea is that the npcshopkeeper now gets paid. After all, the npc does a hell of a lotof work, so why shouldn't it get paid? The npc will be paid in exactlythe same way as a normal employee, except that its pay won't go to abank account but rather 'disappear'. The npc will also claim a bonuseach month, in line with a normal employee's bonus rate. This will helpreduce the surplus funds, and should also give an incentive to playeremployees to work harder. Promotion of the npc employee probably isn'tsuch a good idea though ;-) </p><p>Originally, the stockroom could contain an (theroetically) infiniteamount of stock. This led to large save-files, and a complete loss ofstock in the event of a crash (640k stock files don't tolerate crashesvery well if they are writing at the time). </p><p>To combat this, stock is seperated into one or more stock cabinets,each holding a maximum of 50 items. Each store owns 5 cabinets, butmore may be rented depending on the success of the shop. The rentalfee is paid from the profit account. </p><p>Obviously, all this expenditure needs to be balanced by income.The only standard source of shop's income is stock sales. Othersources can be added on a shop-by-shop basis, such as the automagicalpickler in Tarnach's (A-M). This results in a far more challengingrole for shop's managers, having to balance income versus expenditure.Role-playing at its most business-like :-) </p>",}),"started":({"1st August 1999",}),"author":({"Ringo",}),"see":({"/std/shops/player_shop/office.c","/std/shops/player_shop/mgr_office.c","/std/shops/player_shop/counter.c","/std/shops/player_shop/storeroom.c","/std/shops/player_shop/shop_front.c","/std/shops/player_shop/shopkeeper.c",}),])
define_docs (["APP_FOR":(["main":({"Applications mapping - votes for",}),]),"PERCENT_S":(["main":({"Percentage of employees that can be supervisors",}),]),"PSOBJDIR":(["main":({"Path to player-shop objects",}),]),"MIN_CABINETS":(["main":({"Minimum number of cabinets per storeroom",}),]),"ACCOUNTS":(["main":({"Log entries - accounts (pay/bonus/profit)",}),]),"PAID":(["main":({"Paid action",}),]),"CABINET_COST":(["main":({"Price of cabinets",}),]),"CHART_BUY":(["main":({"Chart mapping - buy price",}),]),"PERCENT_M":(["main":({"Percentage of employees that can be managers",}),]),"MGR_BOOK":(["main":({"Path to the manager's handbook",}),]),"COMPLAINT_TEXT":(["main":({"Prompt shown to player making a complaint",}),]),"CHART_SOLD":(["main":({"Chart mapping - daily sales",}),]),"APP_MESSAGE":(["main":({"Applications mapping - application message",}),]),"EMPLOYEE":(["main":({"Employee bit - employee exists.",}),]),"NPC":(["main":({"Employee bit - employee is the npc shopkeeper.",}),]),"APP_AGAINST":(["main":({"Applications mapping - votes against",}),]),"BANK_HANDLER":(["main":({"Path to the bank handler",}),]),"VABSTAIN":(["main":({"Abstain on applicant",}),]),"BADGE":(["main":({"Path to the shop badge object",}),]),"SHOP_BAG":(["main":({"Path to the shopping bag",}),]),"BAD_MAP":(["main":({"Banned people mapping",}),]),"LOG_ERROR(A,B)":(["main":({"Log unallowed calls",}),]),"APP_TIME":(["main":({"Applications mapping - time of application",}),]),"CHART_MAX":(["main":({"Chart mapping - maximum stock",}),]),"APP_TYPE":(["main":({"Applications mapping - type of applicant",}),]),"APP_MAP":(["main":({"Applications mapping",}),]),"MAX_CABINETS":(["main":({"Maximum number of cabinets per storeroom",}),]),"MANAGER_POINTS":(["main":({"Number of points to become a manager.",}),]),"EMP_FIRE":(["main":({"Time (days) before employees fired for inactivity",}),]),"LOG_DAYS":(["main":({"Length of time (days) to keep shop's logs",}),]),"SUPERVISOR":(["main":({"Employee bit - employee is supervisor.",}),]),"AWAITING":(["main":({"Applicant types - Awaiting a vacancy",}),]),"PERSONNEL":(["main":({"Log entries - personnel issues (hire, fire, promote, demote,warnings, retire, resign, on leave etc)",}),]),"GENERAL":(["main":({"Log entries - general entries",}),]),"CREATOR":(["main":({"Default maintainer of player shops.",}),]),"EMP_INACTIVE":(["main":({"Employee mapping - inactivity flag",}),]),"CHARTLOG":(["main":({"Log entries - chart changes",}),]),"CHART_CAB":(["main":({"Chart mapping - stock cabinet(s) used by this item",}),]),"BAD_REASON":(["main":({"Banned people mapping - reason",}),]),"PERS_DELAY":(["main":({"Call-out delay for saving personnel data",}),]),"MAX_EMP":(["main":({"Maximum number of employees per shop",}),]),"VFOR":(["main":({"Vote for an applicant",}),]),"EMP_WARN":(["main":({"Time (days) before employees warned for inactivity",}),]),"BAD_BANNER":(["main":({"Banned people mapping - banner ",}),]),"HIRE_TIMEOUT":(["main":({"Length of time (seconds) for hired applicants to confirmtheir employment.",}),]),"LOG_ENTRY":(["main":({"Log entries - manual entry",}),]),"POLICY_FOR":(["main":({"Policy mapping",}),]),"SHOP_CHART":(["main":({"Path to the chart",}),]),"EMP_EOM":(["main":({"Employee mepping - = employee of month points",}),]),"CHART_BOUGHT":(["main":({"Chart mapping - daily purchases",}),]),"CABINET":(["main":({"Path to the shop cabinet object",}),]),"NPC_RELOAD":(["main":({"Shopkeeper's reload delay (seconds)",}),]),"POLICY_TIME":(["main":({"Policy mapping",}),]),"POLICY_TYPE":(["main":({"Policy type",}),]),"APP_ABSTAIN":(["main":({"Applications mapping - abstentions",}),]),"EMP_POINTS":(["main":({"Employee mapping - points",}),]),"MAX_STOCK":(["main":({"Maximum number of items in stock",}),]),"APP_QUESTIONS":(["main":({"Questions to ask an applicant for a job",}),]),"FALSE":(["main":({"False value (0)",}),]),"SUPER_POINTS":(["main":({"Number of points to become a supervisor.",}),]),"PLAYER_SHOP":(["main":({"Path to the player-shop handler",}),]),"POLICY_MAP":(["main":({"Policy mapping",}),]),"CHART_AVE":(["main":({"Chart mapping - average stock",}),]),"BAD_TIME":(["main":({"Banned people mapping - time of ban",}),]),"MGR_WARN":(["main":({"Time (days) before managers warned for inactivity",}),]),"EMP_NOPROMOTE":(["main":({"Employee mapping - Skip promotion.This is done either at employee's request, or automaticallyif the \"no score\" property is set.<br>Set at -1 for \"no score\", or TRUE for employee request",}),]),"CLOCKED_IN":(["main":({"Employee bit - player is clocked in.",}),]),"test_player(N)":([]),"UNSET_STR":(["main":({"Initial value for some strings",}),]),"test_prop(N,P)":([]),"last_login(N)":([]),"APPLIED":(["main":({"Applicant types - Just applied",}),]),"CHART_AVESALE":(["main":({"Chart mapping - average daily sales",}),]),"VAGAINST":(["main":({"Vote against an applicant",}),]),"UNPAID":(["main":({"Unpaid action",}),]),"START_PAY":(["main":({"Default pay amount",}),]),"HISTORY_HANDLER":(["main":({"Path to the history handler used for chats through the badge",}),]),"PURCHASE":(["main":({"Log entries - items purchased by shop.Items added to stock, cash removed from till",}),]),"EMP_PAY":(["main":({"Employee mapping - this month's pay",}),]),"PLAYER_HANDLER":(["main":({"Path to the player handler",}),]),"BAN_LENGTH":(["main":({"Length of ban from shop in days",}),]),"EMP_BANK":(["main":({"Employee mapping - bank",}),]),"SHOP_NOTICE":(["main":({"Path to the policy notice",}),]),"SAVE_DELAY":(["main":({"Call-out delay for saving employee & shop data",}),]),"test_cre(N)":([]),"MAX_BAG_ITEMS":(["main":({"Bag maximum storage",}),]),"TRUE":(["main":({"True value (1)",}),]),"SPR_DEMOTE":(["main":({"Time (days) before supervisors demoted for inactivity",}),]),"MIN_EMP":(["main":({"Minimum number of employees per shop",}),]),"POLICY_MGR":(["main":({"Policy mapping",}),]),"MANAGER":(["main":({"Employee bit - employee is manager.",}),]),"SPR_WARN":(["main":({"Time (days) before supervisors warned for inactivity",}),]),"HIRED":(["main":({"Applicant types - Voted in",}),]),"MGR_DEMOTE":(["main":({"Time (days) before managers demoted for inactivity",}),]),"STOCK_PER_CABINET":(["main":({"Maximum number of items per cabinet",}),]),"EMP_MAP":(["main":({"Employee mapping",}),]),"SUGGEST_TEXT":(["main":({"Prompt shown to player making a suggestion",}),]),"POLICY_AGAINST":(["main":({"Policy mapping",}),]),"STAFF_BOOK":(["main":({"Path to staff handbook",}),]),"EMP_NOBONUS":(["main":({"Employee mapping - suspended bonus",}),]),"BANKS":(["main":({"List of banks.The list is formatted as ({ ({ \"Description\", \"Name\" }) })<br>Any new banks must be added to the end of this list to avoid upsetting existing employees ;-)",}),]),"MAX_BAG_WEIGHT":(["main":({"Bag maximum contents' weight",}),]),"MAX_LEAVE":(["main":({"Maximum number of consecutive days an employee can be on leave",}),]),"CLEAR_DELAY":(["main":({"Call-out delay for clearing variables",}),]),"BELL_TIMEOUT":(["main":({"How long to prevent someone ringing the shop bell again (seconds)",}),]),"CHART_SELL":(["main":({"Chart mapping - sell price",}),]),"VOTE_TIMEOUT":(["main":({"Length of time (seconds) before votes are considered final",}),]),"NPC_DELAY":(["main":({"Shopkeeper's movement & command delay",}),]),"HIST_TIMEOUT":(["main":({"Length of time (seconds) for a player's history to expire ifthere has been no update.",}),]),"DECLINE_LENGTH":(["main":({"Length of time (days) before an applicant can re-apply",}),]),"SALE":(["main":({"Log entries - items sold by shop.Items removed from stock, cash added to till",}),]),"POLICY_TEXT":(["main":({"Policy mapping",}),]),])
includes ([])
class_docs ([])
file_name "/include/player_shop.h"
last_changed 1522061544
