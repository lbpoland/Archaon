#/obj/handlers/autodoc/autodoc_file.c
public_functions (["query_times":({({"string",}),({({"int",}),"num",}),(["main":({"Convert a number into a number of times. eg. 1 = once, 2 = twice, 3 = threetimes etc. etc.",}),"param":({"the number in question",}),"return":({"a string equivalent.",}),]),}),"number_as_string":({({"string",}),({({"int",}),"n",}),(["main":({"This method turns a number less than 100 into a string.  This function shouldnot be used.  It will only work for numbers less than 100.",}),"see":({"query_num()",}),"param":({"n the number to turn into a string",}),"return":({"the number as a nice string",}),]),}),"word_ordinal":({({"string",}),({({"int",}),"num",}),(["main":({"This method returns the ordinal of a number as a string (ie, \"first\",\"thirtieth\", etc.)",}),"returns":({"the ordinal of the number as a string",}),"see":({"query_num(), ordinal()",}),"param":({"n the number for which you want the ordinal",}),]),}),"ctime_elapsed":({({"varargs","string",}),({({"int",}),"time_elapsed",({"int",}),"mode",}),([]),}),"query_num":({({"string",}),({({"int",}),"n",({"int",}),"limit",}),(["main":({"This method turns a number into a string.  It returns a string of theform \"one hundred and twenty four\".  This function should be used andnot number_as_string below.The limit argument is used to set the cut off point at which it willprint \"many\".",}),"param":({"i the number to return as a string","limit the largest number to process",}),"return":({"the number as a nice string",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"Cotains some simul_efuns.",}),"author":({"Pinkfish",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/secure/simul_efun/query_number_and_ctime_elapsed.c"
last_changed 1522061544
