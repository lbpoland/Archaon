#/obj/handlers/autodoc/autodoc_file.c
public_functions (["query_property_exists":({({"int",}),({({"string",}),"str",}),(["main":({"Does this property exist?",}),"param":({"str the property to check",}),"return":({"1 if the property exists, 0 if it does not",}),]),}),"query_property_stats":({({"mixed",}),({({"string",}),"var",}),(["main":({"Returns some facts about the property, in the format({ Filename of object which added stat, time added, time expiring })",}),"param":({"The property statistics are wanted on",}),"return":({"That stuff just mentioned.",}),]),}),"query_is_timed_property":({({"int",}),({({"string",}),"str",}),(["main":({"Is this property value timed?",}),"param":({"str the property to check",}),"return":({"1 if it is, 0 if not",}),]),}),"query_property":({({"mixed",}),({({"string",}),"str",}),(["main":({"Returns the value of the property.  This will return the current valueof the named property.",}),"see":({"query_property_exists(), query_is_timed_property(), query_property_time_left()",}),"param":({"str the property to find",}),"return":({"the value of the property",}),]),}),"remove_property":({({"int",}),({({"string",}),"var",}),(["main":({"Removes a property off the object.  This removes the named propertyfrom the object.",}),"param":({"var the name of the property",}),"return":({"always returns 1",}),]),}),"add_properties":({({"void",}),({({"mapping",}),"map",}),(["main":({"Adds a mapping of properties in, instead of just one.",}),"param":({"map the mapping of properties",}),]),}),"query_stats":({({"mapping",}),({}),(["main":({"Return all property statistics",}),"see":({"query_property_stats",}),"return":({"A mapping full of stats",}),]),}),"query_properties":({({"mapping",}),({}),(["main":({"returns a mapping with all the properties in it.",}),"return":({"a mapping of all the properties",}),]),}),"query_property_time_left":({({"int",}),({({"string",}),"str",}),(["main":({"If this is a timed property it returns the amount of time left.",}),"param":({"str the property name",}),"return":({"the amount ot time left",}),]),}),"add_property":({({"varargs","int",}),({({"string",}),"var",({"mixed",}),"val",({"int",}),"tim",}),(["main":({"Adds a property onto the object.  Allows you to add a propertyonto the current object.  You can also set a time for the propertyto last.",}),"param":({"var the name of the property","val the value to give the property","tim the time before the property should time out",}),"return":({"1 if it succeeded, 0 if it failed.",}),]),}),"set_properties":({({"void",}),({({"mapping",}),"map",}),(["main":({"Resets all properties",}),"param":({"map the mapping of properties",}),]),}),"query_timed_properties":({({"mapping",}),({}),(["main":({"Returns a mapping of all the timed properties.",}),"return":({"a mapping of all the timed properties",}),]),}),])
protected_functions (["reload_player_properties":({({"void",}),({}),(["main":({"Fixes the times back up again after it has been loaded.",}),]),}),"save_player_properties":({({"void",}),({}),(["main":({"Updates the timeouts and stuff before saving the player object.",}),]),}),])
inherits ([])
main_docs (["main":({"The property handling system.  This handles all the stuff to do withproperties.",}),"author":({"Pinkfish",}),"change":({"Change by Pinkfish Tue Jun  3 23:32:27 WST 1997to make timed properties.","Change by Terano Thurs 15 October, 1998Added some statistics",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/std/basic/property.c"
last_changed 1522061544
