#/obj/handlers/autodoc/autodoc_file.c
public_functions (["query_city":({({"string",}),({}),(["main":({"Returns the city the real estate place thinks it lives in.",}),]),}),"query_language":({({"string",}),({}),(["main":({"Returns the language the real estate place will use for its agreements.",}),]),}),"add_housing_area":({({"void",}),({({"string",}),"area",}),([]),}),"query_housing_areas":({({"string","*",}),({}),(["main":({"This method returns all the areas in which the real estate office willlook for houses.",}),"return":({"the areas to look for houses",}),]),}),"set_city":({({"void",}),({({"string",}),"where",}),(["main":({"This is just a cosmetic function to help set up the agreements. ",}),"param":({"where the city to which the agreements will say the property defaults to when you cease to own it",}),]),}),"set_language":({({"void",}),({({"string",}),"lang",}),(["main":({"This is just a cosmetic function to help set up the agreements. ",}),"param":({"the agreements be written in",}),]),}),"check_can_bid":({({"int",}),({({"object",}),"person",({"class","auction",}),"which",({"int",}),"bid_amount",}),(["main":({"This method checks to make sure they have enough money in their bankaccounts to make the bid.  This function should be setup to be calledas the big checking function in the inherit of this room.",}),"param":({"person the person being checked for bidding","which the auction being tested to be bid on","bid_amount how much they are bidding",}),]),}),"reset_auctions_to_under_offer":({({"void",}),({}),(["main":({"This function runs down the list of current auctions and makes sure they are all registered as \"Under Offer\" so if for some reason they are not, they won't be put up for sale again.",}),]),}),"stats":({({"mixed","*",}),({}),([]),}),"after_reset":({({"void",}),({}),(["main":({"This runs through the list of vacant houses and checks to see if itshould add them up for auction or not.",}),]),}),"housing_auction":({({"void",}),({({"int",}),"event_type",({"class","auction",}),"auct",({"string",}),"house",({"string",}),"buyer",({"int",}),"cost",({"object","*",}),"obs",}),(["main":({"This function is called during the various phases of the housingauction.  When each phase ends this method is called and anythingthat needs to be done for the end of the phase is sorted out.",}),"param":({"event_type the event that has finished","auct the auction that just finished","house the path of the house being auctioned","buyer the buyer of the house (if sold)","cost how much the house costs","obs the things that were sold (rental agreementsin this case)",}),]),}),"do_agreement":({({"int",}),({}),(["main":({"Request a new rental agreement for a house they might havelost.",}),]),}),"add_house":({({"int",}),({({"string",}),"house",}),(["main":({"Add a house for auction.",}),"string":({"house the path of the house",}),"return":({"1 on success, 0 on failure",}),]),}),])
protected_functions ([])
inherits (["/std/shops/auction_house":({}),])
main_docs (["main":({"This method adds in an area to which the real estate office will lookfor houses.",}),"param":({"area the area to look in",}),])
define_docs (["NEW_AGREEMENT_COST":([]),"REAL_ESTATE_NEW_LOT_BIDDING":([]),"AUCTION_LENGTH":([]),])
includes (["/include/room/auction.h":1522061544,"/include/nomic_system.h":1522061544,"/include/move_failures.h":1522061544,"/include/housing.h":1522061544,"/include/shops/bank.h":1522061544,"/include/money.h":1522061544,])
class_docs ([])
file_name "/std/shops/real_estate_auction.c"
last_changed 1522061544
