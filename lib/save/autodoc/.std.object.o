#/obj/handlers/autodoc/autodoc_file.c
public_functions (["set_material":({({"void",}),({({"mixed",}),"word",}),(["main":({"Sets the material of the object, this adds this material to thefront of the material list.",}),"param":({"word the material to set it to",}),]),}),"query_colour":({({"string",}),({}),(["main":({"The colour of the object.",}),"return":({"the colour of the objecy",}),]),}),"query_cloned_by":({({"string",}),({}),(["main":({"Who cloned the object.  Used for security reasoin to trace who havebeen cloning up objects for players.",}),"return":({"the person who cloned the object",}),]),}),"set_name":({({"void",}),({({"string",}),"word",}),(["main":({"Gives the object a name.  Sets the name to the word and makes it theshort description  and attempts to create the pural short descriptionfrom it.",}),"param":({"name the name to use",}),]),}),"set_colour":({({"void",}),({({"string",}),"word",}),(["main":({"Sets the colour of the object.",}),"param":({"word the colour to make the object",}),]),}),"add_material":({({"void",}),({({"mixed",}),"material",}),(["main":({"This method adds a material to the list of current materials.",}),"param":({"material the material to add",}),]),}),"query_possessive":({({"string",}),({}),(["main":({"The possessive of the object.",}),"return":({"always returns \"its\"",}),]),}),"set_quality":({({"void",}),({({"int",}),"quality",}),(["main":({"This method sets the quality of the object.  All objects are bydefault 'normal' quality.",}),"param":({"quality the quality of the object",}),]),}),"set_player":({({"void",}),({({"object",}),"thing",}),(["main":({"Sets the player associated with the object.  This is used during theautoload sequence.",}),"see":({"/global/auto_load.c",}),"param":({"thing the player object we belong to",}),]),}),"query_objective":({({"string",}),({}),(["main":({"The objective of the object.",}),"return":({"always returns \"it\"",}),]),}),"clean_up":({({"int",}),({({"int",}),"inherited",}),([]),}),"query_materials":({({"string","*",}),({}),(["main":({"This returns all of the materials of the object.",}),"return":({"all the materials",}),]),}),"replace_long_dollars":({({"string",}),({({"object",}),"player",({"string",}),"text",}),(["main":({"This method replaces any colours of materials in the given stringwith the appropriate ccolours or materials for this object.",}),"param":({"player the player attempting to check the colour/material.","text the text to replace",}),"return":({"a new string with the dollar identities expanded.",}),]),}),"query_quality":({({"int",}),({}),(["main":({"This method returns the quality of the object.  The quality is usedin the crafts system, amongst other things.",}),]),}),"query_pronoun":({({"string",}),({}),(["main":({"The pronoun of the object.",}),"return":({"always returns \"it\"",}),]),}),"query_material":({({"string",}),({}),(["main":({"The material of the object.",}),"return":({"the name of the material",}),]),}),"long":({({"string",}),({({"string",}),"word",({"int",}),"dark",}),(["main":({"The description of an object when someone looks at it.  This handlesthe extra code for messages, colour and material.",}),"param":({"word the word it was matched on","dark is it dark from the player's perspecitive",}),"return":({"the long description",}),]),}),])
protected_functions ([])
inherits (["/std/basic/enchant":({}),"/std/basic/help_files":({}),"/std/basic/extra_look":({}),"/std/basic/auto_load":({}),"/std/basic/id":({}),"/std/basic/property":({}),"/std/basic/effects":({}),"/std/basic/misc":({}),"/std/basic/theft_callback":({}),"/std/basic/read_desc":({}),])
main_docs (["main":({"The basic object.  This pulls together all the bits needed to createa basic object.",}),"author":({"Pinkfish",}),"change":({"many any many times",}),"see":({"/std/room.c",}),])
define_docs (["AUTO_LOAD_TAG":([]),])
includes (["/include/cmr.h":1522061544,])
class_docs ([])
file_name "/std/object.c"
last_changed 1522061544
