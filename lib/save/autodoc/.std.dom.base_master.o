#/obj/handlers/autodoc/autodoc_file.c
public_functions (["remove_member":({({"int",}),({({"string",}),"name",}),([]),}),"query_changelog":({({"string",}),({({"string",}),"filename",}),([]),}),"nuke_creator_project_cache":({({"int",}),({({"string","*",}),"creators",}),([]),}),"query_lord":({({"string",}),({}),([]),}),"can_rcsforce":({({"int",}),({({"string",}),"file",({"string",}),"person",({"string",}),"locker",}),([]),}),"add_deputy":({({"int",}),({({"string",}),"name",}),([]),}),"query_prevent_shadow":({({"int",}),({}),([]),}),"valid_write":({({"int",}),({({"string","*",}),"path",({"string",}),"euid",({}),"string",}),([]),}),"query_assigned_to_directory":({({"string","*",}),({({"string","*",}),"dir",}),(["main":({"Finds the person assigned to the specific directory.  It will climbup the directory tree looking for who to assign the directory too.",}),"param":({"dir the directory to find assignments in",}),"return":({"the array of people assigned to the directory",}),]),}),"save_me":({({"void",}),({}),([]),}),"add_member":({({"int",}),({({"string",}),"name",}),([]),}),"query_project":({({"string",}),({({"string",}),"name",}),([]),}),"query_access":({({"mapping",}),({}),([]),}),"remove_rcsforce_allowed":({({"int",}),({({"string",}),"creator",({"string",}),"directory",}),([]),}),"valid_read":({({"int",}),({({}),"string",({"string",}),"euid",({}),"string",}),([]),}),"query_directory_assignments":({({"mapping",}),({}),(["main":({"This method returns all the current assignments from directory to thepeople who are looking after them.",}),"return":({"the directory assignment mapping",}),]),}),"query_use_tracker":({({"int",}),({}),([]),}),"set_idle_mess":({({"int",}),({({"string",}),"txt",}),([]),}),"assign_people_to_directory":({({"int",}),({({"string",}),"dir",({"string","*",}),"people",}),(["main":({"This method allows a specific person to be assigned to the givendirectory.",}),"param":({"dir the directory to assign someone too","people the people who are assigned to the directory",}),]),}),"add_rcsforce_allowed":({({"int",}),({({"string",}),"creator",({"string",}),"directory",}),([]),}),"add_permission":({({"int",}),({({"string",}),"euid",({"string",}),"path",({"int",}),"mask",}),([]),}),"check_call_tree":({({"int",}),({({"int",}),"only_lord",}),([]),}),"query_idle_mess":({({"string",}),({}),([]),}),"set_project":({({"int",}),({({"string",}),"name",({"string",}),"pro",}),([]),}),"check_permission":({({"int",}),({({"string",}),"euid",({"string","*",}),"path",({"int",}),"mask",}),([]),}),"remove_permission":({({"int",}),({({"string",}),"euid",({"string",}),"path",({"int",}),"mask",}),([]),}),"query_deputy":({({"int",}),({({"string",}),"name",}),([]),}),"query_members":({({"string","*",}),({}),([]),}),"remove_deputy":({({"int",}),({({"string",}),"name",}),([]),}),"set_use_tracker":({({"void",}),({({"int",}),"i",}),([]),}),"query_domain":({({"string",}),({}),([]),}),"query_deputies":({({"string","*",}),({}),([]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"Called to check for rcsforcing of a file.  By default we allow the deputiesto rcsforce things.",}),"param":({"file the file to check","person the person forcing","locker the person who has the lock",}),])
define_docs (["PROJECT_CODE":([]),"LOCK_MASK":([]),])
includes (["/include/error_handler.h":1522061544,"/include/project_management.h":1522061544,"/include/player_handler.h":1522061544,])
class_docs ([])
file_name "/std/dom/base_master.c"
last_changed 1522061544
