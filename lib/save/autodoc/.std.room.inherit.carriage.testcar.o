#/obj/handlers/autodoc/autodoc_file.c
public_functions (["check_can_leave":({({"int",}),({({"string",}),"exit",({"object",}),"person",}),([]),}),"co":({({"mixed","*",}),({}),([]),}),"query_next_stop":({({"class","stop_list_details",}),({}),(["main":({"This method returns the details of the next stop.",}),"return":({"the details of the next stop",}),]),}),"update_route":({({"void",}),({({"string",}),"name",({"class","route_details",}),"new_route_info",({"object",}),"handler",}),(["main":({"This is called by the handler to update the current route information",}),"param":({"name the name of the rotue","new_route_info the new route to use","handler the handler for the carriage",}),]),}),"give_warning":({({"void",}),({({"string",}),"this_stop_name",({"string",}),"next_stop_name",}),([]),}),"make_stop":({({"void",}),({}),(["main":({"Stop at the next location.",}),]),}),"query_carriage_name":({({"string",}),({}),(["main":({"This method returns the name of the route the carriage is on.",}),"return":({"the name of the carriage route.",}),]),}),"query_outside":({({"object",}),({}),(["main":({"This method returns the object that is the outside of us.",}),"return":({"the environment of the carriage",}),]),}),"query_stop_info":({({"int","*",}),({}),(["main":({"This method returns the indexes of the current stop and thenext stop.",}),"return":({"({ current stop, next stop })",}),]),}),"move_on":({({"void",}),({}),([]),}),"make_carriage":({({"int",}),({({"string",}),"name",({"class","route_details",}),"new_route_info",({"object",}),"handler",}),(["main":({"This is called by the handler to originaly setup the current routeinformation.",}),"param":({"name the name of the rotue","new_route_info the new route to use","handler the handler for the carriage",}),]),}),"do_ring":({({"int",}),({}),([]),}),"query_environ_long":({({"string",}),({}),([]),}),"query_route_map":({({"class","route_details",}),({}),(["main":({"This method returns the entire details of the route used by thiscarriage.",}),"return":({"the entire route details",}),]),}),"create_carriage_driver":({({"object",}),({}),([]),}),"query_current_stop":({({"class","stop_list_details",}),({}),(["main":({"This method returns the details of the current stop.",}),"return":({"the details of the current stop",}),]),}),])
protected_functions ([])
inherits (["/std/room/basic_room":({}),])
main_docs (["main":({"This method should be overriden by higher level carriages to setupthe driver correctly.",}),"return":({"the driver to use for this carriage",}),])
define_docs (["DEFAULT_TRAVEL":([]),"DEFAULT_WAIT":([]),])
includes (["/include/room/carriage.h":1522061544,])
class_docs ([])
file_name "/std/room/inherit/carriage/testcar.c"
last_changed 1522061544
