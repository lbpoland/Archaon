#/obj/handlers/autodoc/autodoc_file.c
public_functions (["engrave_init":({({"void",}),({}),(["main":({"This method should be called in the inheriting room's init function.  IUtwill setup the commands to allow the object to be engraved.",}),"see":({"do_engrave()",}),]),}),"set_engrave_language":({({"void",}),({({"string",}),"lang",}),(["main":({"This method sets which language (for example, \"agatean\", or\"morporkian\") to be used when engraving.  It defaults to \"general\",which is not to be recommended. ",}),"see":({"do_engrave()",}),]),}),"engrave_objects":({({"int",}),({({"object","*",}),"obs",({"int",}),"cost",}),(["main":({"This method is called when the engrave is successful.This should be overridden in the inheritable to print out themessage you wish to say.  If this function returns 1 then thedefault failed message is not used.",}),"see":({"do_engrave()",}),]),}),])
protected_functions (["engrave_no_money":({({"int",}),({({"object","*",}),"obs",({"int",}),"cost",}),(["main":({"This method is called if the player does not have enough money tocomplete the engraving.This should be overridden in the inheritable to print out themessage you wish to say.  If this function returns 1 then thedefault failed message is not used.",}),"see":({"do_engrave()",}),"param":({"obs the objects which were unable to be engraved","cost the cost of the objects to be engraved",}),"return":({"0 use default fail mesasage, 1 override default fail message",}),]),}),"do_engrave":({({"int",}),({({"object","*",}),"things",({"string",}),"message",}),(["main":({"This method does the actual engraving.",}),"see":({"engrave_init()",}),"param":({"things the things to get engraved.","message the message to engarve on the objects",}),]),}),"engrave_wrong_items":({({"int",}),({({"object","*",}),"obs",}),(["main":({"This method is called if the objects in question are unable to beengraved.This should be overridden in the inheritable to print out themessage you wish to say.  If this function returns 1 then thedefault failed message is not used.",}),"see":({"do_engrave()",}),"param":({"obs the objects which could not be engraved.",}),"return":({"0 use default fail mesasage, 1 override default fail message",}),]),}),"engrave_living":({({"int",}),({({"object","*",}),"obs",}),(["main":({"This method is called when a living object is attempted to be engraved.This should be overridden in the inheritable to print out themessage you wish to say.  If this function returns 1 then thedefault failed message is not used.",}),"see":({"do_engrave()",}),"param":({"liv the living objects",}),"return":({"0 use default fail mesasage, 1 override default fail message",}),]),}),])
inherits ([])
main_docs (["main":({"This is a small inheritable to allow places to do engraving.  POut apiece of code inthe init function which calls the engrave_init()function.",}),"author":({"Macchirton",}),"change":({"17th of May 1998 PinkfishTurned into an inheritable mbase and reworked to make work with add_commandcorrectly.Added set_engrave_language(string str) to solve the problem with \"common\" engravings  - Danbala, Sept 2002",}),"example":({"inherit \"/std/room/basic_room\";inherit \"/std/shops/engrave\";void init() {   basic_room::init();   engrave_init();} /* init() */",}),])
define_docs ([])
includes (["/include/shops/bank.h":1522061544,"/include/shops/engrave.h":1522061544,"/include/money.h":1522061544,])
class_docs ([])
file_name "/std/shops/engrave_inherit.c"
last_changed 1522061544
