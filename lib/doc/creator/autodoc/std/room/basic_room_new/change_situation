.DT
change_situation
Disk World creator help
change_situation

.SH Name
.SP 5 5
change_situation -  Starts one or more situations that will end after a specified duration.
.EP

.SH Syntax
.SI 5
varargs mixed change_situation(mixed label,
mixed duration,
mixed words)
.EI

.SH Parameters
.SI 5
%^BOLD%^label%^RESET%^ - (mixed) label of the situation to start up.  
If you pass an array such as ({ "frog1", "frog2" }) for the 
label then that set of situations are started one at
a time and the total duration is split evenly between them.
Label is usually an integer or a string or an array of
integers and/or strings.
If the string is a list of labels
separated by , then multiple situations
are started using those labels.
%^BOLD%^duration%^RESET%^ - (int) total time (seconds) the overall situation 
should last.  You can put an array of durations -- one for each
situation if the label lists more than one situation and then
the overall time is the sum of the numbers.
-1 is a special duration.  It means that the labelled situation goes on
forever (and thus nothing after it in the array will ever go).
%^BOLD%^words%^RESET%^ - is a list of replacements for #n in the text OR
a random number seed to use to choose words from random_words.
eg. ({ "#1", "frog", "#2", "honey" }) or 22

.EI

.SH Returns
.SI 5
handle useful for halting the changes later.  It is typically
a small positive integer..EI

.SH Defined in
.SI 5
/std/room/basic_room_new.c
.EI

.SH Description
.SP 5 5

Starts one or more situations that will end after a
specified duration.  You can use an array and make
further situations commence when others end.
.EP

.SH Example 1
.SI 5
handle=change_situation( ({ "sew1","sew2" }), ({ 60,60 }) );

if (over) shutdown_situation( handle, ({ "sew1","sew2" }) );
.EI

.SH Example 2
.SI 5
change_situation( ({ "background,sew1","background,sew2" }), 120 );
.EI

.SH Example 3
.SI 5
change_situation( ({ "building_falling","rubble" }), ({ 120, -1 }) );
.EI

.SH Example 4
.SI 5
add_situation( "boat1", 
  new(class situation,
    start_mess: "A little fishing boat comes up to the pier.  "
       "It has the name \"#1\" painted on the side.\n"
       "A fisherman jumps off the boat and ties its painter to a post.",
    chats: ({"The little boat bobs up and down next to the pier.",
             "A fisherman hops off the little boat." }),
    chat_rate: ({ 20, 30 }),
    extra_look: "There is a little boat here.",
    add_items: ({ ({ ({ "#1","little boat" }), 
      "There is little fishing boat tied up at the pier here.  "
      "The name \"#1\" is painted on the side."   }) }),
    end_mess: "The fishermen get back on board and "
       "the little boat moves on.",
    random_words: ({ ({ "Honey Toad", "Piker", "Bing" }) })
  )
);

change_situation( "boat1", 120, ({ "#1","Floating Egg" }) );

.EI

.SH See also
.SP 5 5
shutdown_situation, add_situation, automate_situation, goto learning  search  situation  for working examples
.EP

